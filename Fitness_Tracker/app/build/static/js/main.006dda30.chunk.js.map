{"version":3,"sources":["utils/keyGenerator.js","generic/LoadingScreen.js","generic/fieldComponents.js","login/SignInFunc.js","login/SignUpFunc.js","login/FormCard.js","messages/Error.js","messages/Success.js","login/Login.js","login/Confirmation.js","login/PwResetPage.js","Context.js","community/Searchbar.js","utils/userInfo.js","community/friends/FriendDisplay.js","community/friends/FriendRequests.js","community/header/CommunityHeader.js","community/friends/Friends.js","community/Community.js","fitness/carousel/ImageSlide.js","fitness/carousel/Arrow.js","utils/unitConverter.js","fitness/carousel/Carousel.js","fitness/Calories.js","fitness/Duration.js","fitness/charts/Past.js","fitness/run/RunDoughnut.js","fitness/withFitnessPage.js","fitness/charts/PaceLineProgression.js","fitness/run/Run.js","fitness/jump/Jump.js","fitness/Details.js","fitness/swim/SwimDoughnut.js","fitness/swim/Swim.js","fitness/Fitness.js","fitness/charts/DateBar.js","fitness/run/RunDetails.js","fitness/swim/SwimDetails.js","fitness/jump/JumpDetails.js","profile/EditProfileFunc.js","profile/UserProfile.js","profile/SearchProfile.js","profile/Profile.js","settings/dropdown-menus/UnitSystemMenu.js","settings/dropdown-menus/PoolLengthMenu.js","settings/dropdown-menus/PrivacyMenu.js","settings/PoolLengthPopup.js","settings/Settings.js","settings/Stats.js","generic/Navbar.js","home/Home.js","generic/SideMenu.js","home/Header.js","Spa.js","App.js","index.js","utils/storage.js"],"names":["module","exports","makeID","length","result","characters","charactersLength","i","charAt","Math","floor","random","LoadingScreen","react_default","a","createElement","className","Component","inputErrorStyle","border","errorMsgStyle","color","fontSize","width","textAlign","textField","label","type","name","error","touched","htmlFor","formik_esm","style","msg","SignInFunc","props","validationSchema","Yup","signInEmail","required","signInPassword","remember","max","initialValues","onSubmit","values","_ref","setSubmitting","console","log","onSignIn","_ref2","spanClassName","errors","id","value","SignUpFunc","signUpEmail","email","signUpPassword","matches","signUpPasswordConf","oneOf","signUpFirstName","signUpLastName","signUpUsername","onSignUp","FormCard","checked","this","renderSignIn","onChange","onSignInClick","onSignUpClick","ErrorAlert","_useState","useState","_useState2","Object","slicedToArray","show","setShow","Alert","variant","onClose","dismissible","Success","storeToken","token","setInLocalStorage","storageKey","setInSessionStorage","Login","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","signedIn","errorMsgs","Set","successMsgs","displayErrors","bind","assertThisInitialized","showSuccesses","showError","showSuccess","switchToSignIn","switchToSignUp","clearSignUp","clearSignIn","tokenLogin","obj","getFromLocalStorage","err","setState","signUpUserName","headers","Headers","append","concat","fetch","method","res","json","success","messages","Content-Type","body","JSON","stringify","password","passwordConf","firstName","lastName","username","toConsumableArray","signUpValid","newErrors","stored","alert","prevState","idx","_this2","messages_Error","key","filter","errMsg","map","_this3","messages_Success","successMsg","getToken","react_router","to","pathname","rel","href","generic_LoadingScreen","login_FormCard","signInValid","Confirmation","renderDisplay","queryValues","queryString","parse","location","search","emailToken","confirmUrl","then","catch","confirmationErrors","removeFromLocalStorage","Fragment","onClick","history","push","withRouter","PwResetPage","validToken","newPwText","newPwTextConf","onNewPassChange","onNewPassConfChange","setInStorage","e","target","_this$state","reqBody","newPassword","data-type","pattern","title","SpaContext","React","createContext","Searchbar","onMouseLeave","mouseLeave","placeholder","onSearchTextChange","searchText","getBestsURL","getProfileURL","getUsernameURL","getBests","_x","_getBests","apply","arguments","_callee","bestsJson","regenerator_default","wrap","_context","prev","next","sent","abrupt","bests","stop","getProfile","_x2","_getProfile","_callee2","profileJson","_context2","profilePicture","profileURL","getUsername","_x3","_getUsername","_callee3","usernameJson","_context3","FriendDisplay","src","profileUrl","defaultProfile","alt","imgAlt","isFriend","rank","isFriendRequest","onAcceptRequest","FriendRequests","friendRequestListItems","createFriendRequests","friendRequests","addFriendToState","removeFriendReq","acceptRequest","liTags","Promise","all","protoStyle","numRequests","marginTop","CommunityHeader","setDisplay","Friends","friendTableRows","context","contextType","Community","_isMounted","display","searches","showQueries","emptySearch","numFriendsDisplay","renderSearch","sendReq","clearSearch","newDisplay","removed","friend","senderID","friends","friendObject","preventDefault","userToken","message","undefined","users","userID","_id","receiverFirstName","receiverLastName","receiverUsername","socket","decodeToken","emit","senderFirstName","senderLastName","senderUsername","receiverID","otherFriendID","_this$context3","friendsPending","rootURL","friendSet","user","requestSet","pendingSet","forEach","toUpperCase","slice","react_router_dom","has","displayButton","toLowerCase","friends_Friends","friends_FriendRequests","userFirstName","userLastName","community_Searchbar","header_CommunityHeader","ImageSlide","getLabels","renderNum","action","unitSystem","settings","numLabel","secondaryLabel","stats","indexDisplay","activityData","labels","num","_this$props","renderSecondary","imageUrl","Arrow","direction","clickFunction","glyph","activity","kgToLbs","lbsToKg","inToCm","cmToIn","ftToCm","weightConvert","system","weight","parsed","split","units","convertedWeight","round","parseInt","toString","heightConvert","height","convertedHeight","heightInCm","feet","inches","englishHeight","parseDate","date","Carousel","dropdownItemClick","dropdownItems","session","Date","uploadDate","dayMonth","previousSlide","nextSlide","activityIndex","displayDate","data-toggle","aria-haspopup","aria-expanded","getDropdownDates","carousel_Arrow","carousel_ImageSlide","Calories","react_fontawesome_index_es","icon","cals","Duration","duration","Past","Chart","pluginService","register","zoom","data","hoverLabel","yAxisMin","yAxisMax","chartTitle","react_chartjs_2_es","datasets","backgroundColor","borderColor","borderWidth","options","maintainAspectRatio","plugins","text","legend","position","scales","yAxes","ticks","min","responsive","RunDoughnut","colors","reverse","array","n","middle","temp","withFitnessPage","WrappedComponent","WithFitnessPage","_Component","pastGraphLabels","pastGraphData","progressionLabels","progressionDate","makePastGraphLabels","makePastGraphData","calcAvgNum","calcAvgCals","inherits","createClass","decimals","parseFloat","toFixed","input","activityJson","dateInfo","avg","count","calories","nextIndex","assign","isNullOrUndefined","roundToNDecimals","LineProgression","Run","paceLabels","paceDate","estimateDistanceRun","runCount","walkCount","runJson","paces","pace","j","isNaN","runPercent","walkPercent","totalTime","timeInterval","timeSeries","Array","currentStatDisplay","fitness_carousel_Carousel","align","time","charts_Past","PaceLineProgression_LineProgression","makePaceLabels","calcAvgPace","makeDoughnutData","Jump","getCurrentBestHeight","jumpJson","heights","verticalHeight","best","_this$context","calcAvgHeight","jump","Details","detailsLink","SwimDoughnut","Swim","calculateDistance","calcAvgSpeed","_this$context$setting","swimLap","distanceInMeters","distanceInYards","_this$context$setting2","_this$props2","distMetric","distance","lapTimes","reduce","b","avgSpeed","_this$props3","totalNumLaps","flyCount","backCount","breastCount","freeCount","strokes","stroke","lowerCaseStroke","swimJson","_this$props4","calcAvgTimePerLap","Fitness","activityDisplay","renderActivity","changeActivityDisplay","run_Run","jump_Jump","swim_Swim","showTransition","DateBar","overflowX","d","x","y","xAxes","stepSize","maxRotation","scaleLabel","labelString","animation","easing","pan","enabled","mode","speed","threshold","limits","RunDetails","setJumpData","localStorageKey","response","chartLabels","makeLabels","chartData","getData","h","fitness_charts_DateBar","SwimDetails","JumpDetails","flexDirection","justifyContent","alignItems","serverURL","updateProfileURL","checkDuplicateURL","uploadPicURL","EditProfileFunc","useContext","updateFirstName","updateLastName","updateBio","updateAge","positive","integer","updateLocation","updateGender","updateHeightCm","updateHeightIn","updateHeightFt","updateWeight","_updateProfile","asyncToGenerator","mark","formValues","file","formData","verifyRes","verifyJson","uploadPicRes","updateRes","updateJson","FormData","etag","bio","gender","age","window","reload","mounted","updateProfile","setFieldValue","event","currentTarget","files","accept","as","textArea","weightDisplay","heightDisplay","closePopup","UserProfile","bestJump","bestSwim","bestRun","editProfile","expandBio","ShowMoreText_default","lines","more","less","anchorClass","expanded","displayHeight","Error","_this$context2","displayWeight","editBtn","reactjs_popup_es","trigger","modal","close","renderPopup","renderHeight","renderWeight","renderBio","SearchProfile","totals","getBasicInfo","getFriends","getTotalsAndBests","seeBasicInfo","match","params","seeFriendsList","seeFitness","postBody","searchUserName","_context4","t0","steps","minutes","laps","Profile","profile_UserProfile","profile_SearchProfile","UnitSystemMenu","dropdownText","aria-labelledby","onSelect","PoolLengthMenu","onCustomSwimClick","PrivacyMenu","PoolLengthPopup","open","showCustomSwimSettings","closeOnDocumentClick","closeCustomSwimSettings","setCustomSwimLength","onCustomSwimLengthChange","step","customSwimUnits","setCustomSwimUnits","Settings","currCustomSwimLength","customSwimLength","friendsListChoice","fitnessChoice","basicInfoChoice","unitDisplayChoice","swimLengthChoice","saveSettings","openCustomSwimSettings","setFriendsListChoice","setFitnessChoice","setBasicInfoChoice","setUnitDisplayChoice","setSwimLengthChoice","displaySuccesses","$","tooltip","updateUserInfo","textContent","_this$state2","menuType","_this$state3","data-placement","renderDropDown","lsUserToken","ssUserToken","getFromSessionStorage","Stats","submitSettings","radioChange","checkUnitSystem","Navbar","sideNavStyle","clicked","selected","document","getElementById","homeURL","communityURL","fitnessURL","settingsURL","logout","openNav","closeNav","exact","Home","particles_default","particles","number","size","line_linked","opacity","interactivity","events","onhover","enable","modes","grab","SideMenu","getUserInfoURL","root","Header","notification","url","setUpSocket","getActivityJson","addFriendRows","renderHeader","resolve","reject","connectionOptions","sync disconnect on unload","io","connect","on","logoutSocketID","removeFromSessionStorage","trackedFitness","tableRows","userJson","jumpsTracked","swimsTracked","runsTracked","objectSpread","_this4","react_media","query","render","generic_Navbar","_this5","generic_SideMenu","_this6","Context","Provider","renderSideMenu","path","component","settings_Settings","Spa","App","src_Spa","library","add","faCheckSquare","faCoffee","faAtom","faFireAlt","faClock","ReactDOM","src_App_0","valueStr","localStorage","getItem","sessionStorage","setItem","removeItem","socketStorageKey"],"mappings":"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","file":"static/js/main.006dda30.chunk.js","sourcesContent":["// generates a random string of length\nfunction makeID(length) {\n   var result           = '';\n   var characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n   var charactersLength = characters.length;\n   for ( var i = 0; i < length; i++ ) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n   }\n   return result;\n}\n\nmodule.exports = { makeID }\n","import React, { Component } from 'react';\n\nclass LoadingScreen extends Component {\n  render() {\n    return (\n      <div className=\"loading-screen\">\n        <h1>Loading...</h1>\n      </div>\n    )\n  }\n}\n\nexport default LoadingScreen\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\n// specifically for edit profile page\nconst inputErrorStyle = {'border': '2px solid rgb(255, 162, 162)'}\nconst errorMsgStyle = { 'color' : 'rgb(255, 162, 162)', 'fontSize': '10pt', 'width': '90%', 'textAlign': 'left' }\n\nfunction weightDisplay(name, className, unitSystem, errors) {\n  return (\n    <div className='field-container'>\n      <label htmlFor='updateWeight'>Weight</label>\n      <div className='weight-container'>\n        <Field \n          style={errors.updateWeight ? inputErrorStyle : null}\n          name={name}\n          className={className}\n          type=\"number\"\n        />\n        <span className='weight-units'>{(unitSystem === \"english\") ? \"lbs\" : \"kg\"}</span>\n      </div>\n      <ErrorMessage name={name}>{msg => <div style={errorMsgStyle}>{msg}</div>}</ErrorMessage>\n    </div>\n  )\n}\n\n// specifically for edit profile page\nfunction heightDisplay(name, className, unitSystem, errors) {\n  if (unitSystem === \"English\") {\n    return (\n      <div className='height-wrapper'>\n        <label htmlFor='height'>Height</label>\n        <div id='height' className=\"field-container\">\n          <div className='height-container'>\n            <Field \n              style={errors.updateHeightFt ? inputErrorStyle : null}\n              name='updateHeightFt'\n              className={className}\n              type=\"number\"\n            />\n            <span className='height-units ft'>ft</span>\n          </div>\n          <ErrorMessage name='updateHeightFt'>{msg => <div style={errorMsgStyle}>{msg}</div>}</ErrorMessage>\n          <div className='height-container'>\n            <Field \n              style={errors.updateHeightIn? inputErrorStyle : null}\n              name='updateHeightIn'\n              className={className}\n              type=\"number\"\n            />\n            <span className='height-units in'>in</span>\n          </div>\n          <ErrorMessage name='updateHeightIn'>{msg => <div style={errorMsgStyle}>{msg}</div>}</ErrorMessage>\n        </div>\n      </div>\n    )\n  } else {\n    return (\n      <div className='height-wrapper'>\n        <label htmlFor='height'>Height</label>\n        <div className=\"field-container\">\n          <div className='height-container'>\n            <Field \n              style={errors.updateHeightCm ? inputErrorStyle : null}\n              name='updateHeightCm'\n              className={className}\n              type=\"number\"\n            />\n            <span className='height-units cm'>cm</span>\n          </div>\n          <ErrorMessage name='updateHeightCm'>{msg => <div style={errorMsgStyle}>{msg}</div>}</ErrorMessage>\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction textField(label, type, name, className, error, touched) {\n  return (\n    <div className='field-container group'>\n      <label className='label' htmlFor={name}>{label}</label>\n      <Field \n        style={error && touched ? inputErrorStyle : null}\n        name={name}\n        className={className}\n        type={type}\n      />\n      <ErrorMessage name={name}>{msg => <div style={errorMsgStyle}>{msg}</div>}</ErrorMessage>\n    </div>\n  )\n}\nfunction textArea(label, name, className, error, touched) {\n  return (\n    <div className='field-container group'>\n      <label className='label' htmlFor={name}>{label}</label>\n      <Field\n        name={name}\n        className={className}\n        type=\"text\"\n        as='textarea'\n        style={error && touched ? inputErrorStyle : null}\n      />\n      <ErrorMessage style={errorMsgStyle} name={name}/>\n    </div>\n  )\n}\nfunction checkBox(label, name, spanClassName) {\n  return (\n    <div className='group'>\n      <Field\n        type=\"checkbox\"\n        name={name}\n        id='check'\n        className='check'\n      />\n      <label htmlFor=\"check\">\n        <span className={spanClassName}></span> {label}\n      </label>\n    </div>\n  )\n}\nexport {\n  weightDisplay,\n  heightDisplay,\n  textArea,\n  textField,\n  checkBox,\n}","import React from 'react'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup';\nimport { textField, checkBox } from '../generic/fieldComponents'\nexport default function SignInFunc(props) {\n  const validationSchema = Yup.object({\n    signInEmail: Yup.string()\n      .required('Cannot be empty'),\n    signInPassword: Yup.string()\n      .required('Cannot be empty'),\n    remember: Yup.string()\n      .max(250, \"Must be 250 characters or less\"),\n  })\n  return (\n    <div className='sign-in-htm'>\n      <Formik\n        initialValues={{\n          signInEmail: '',\n          signInPassword: '',\n          remember: false,\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(values)\n          props.onSignIn(values)\n          setSubmitting(false)\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            {textField('Email', 'text', 'signInEmail', 'input-field', errors.signInEmail, touched.signInEmail)}\n            {textField('Password', 'password', 'signInPassword', 'input-field', errors.signInPassword, touched.signInPassword)}\n            {checkBox('Keep me signed in', 'remember', 'icon')}\n            <div className=\"group\">\n              <input type=\"submit\" className=\"button\" value=\"Sign In\" id=\"signInButton\" />\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup';\nimport { textField } from '../generic/fieldComponents'\n\nexport default function SignUpFunc(props) {\n  const validationSchema = Yup.object({\n    signUpEmail: Yup.string()\n      .required('Cannot be empty')\n      .email('Please enter a valid email')\n      .max(100, 'Must be less than 100 characters long'),\n    signUpPassword: Yup.string()\n      .required('Cannot be empty')\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$/,\n        \"Must contain 8 characters, one uppercase, one lowercase, and one number\"\n      ),\n    signUpPasswordConf: Yup.string()\n      .required('Cannot be empty')\n      .matches(\n        /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}/,\n        \"Must contain 8 characters, one uppercase, one lowercase, one number\"\n      )\n      .oneOf([Yup.ref('signUpPassword'), null], 'Passwords must match'),\n    signUpFirstName: Yup.string()\n      .required('Cannot be empty'),\n    signUpLastName: Yup.string()\n      .required('Cannot be empty'),\n    signUpUsername: Yup.string()\n      .required('Cannot be empty'),\n  })\n  return (\n    <div className=\"sign-up-htm\">\n      <Formik\n        initialValues={{\n          signUpEmail: '',\n          signUpPassword: '',\n          signUpPasswordConf: '',\n          signUpFirstName: '',\n          signUpLastName: '',\n          signUpUsername: '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          console.log(values)\n          props.onSignUp(values)\n          setSubmitting(false)\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form>\n            {textField(\n              'Email',\n              'text',\n              'signUpEmail',\n              'input-field',\n              errors.signUpEmail,\n              touched.signUpEmail\n            )}\n            {textField('Password', 'password', 'signUpPassword', 'input-field', errors.signUpPassword, touched.signUpPassword)}\n            {textField('Repeat Password', 'password', 'signUpPasswordConf', 'input-field', errors.signUpPasswordConf, touched.signUpPasswordConf)}\n            {textField('First Name', 'text', 'signUpFirstName', 'input-field', errors.signUpFirstName, touched.signUpFirstName)}\n            {textField('Last Name', 'text', 'signUpLastName', 'input-field', errors.signUpLastName, touched.signUpLastName)}\n            {textField('Username', 'text', 'signUpUsername', 'input-field', errors.signUpUsername, touched.signUpUsername)}\n            <div className=\"group\">\n              <input type=\"submit\" className=\"button\" value=\"Sign Up\" id=\"signInButton\" />\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport SignInFunc from \"./SignInFunc\"\nimport SignUpFunc from \"./SignUpFunc\"\nclass FormCard extends Component {\n  render() {\n    return (\n      <div className=\"headers\">\n        <input\n          id=\"tab-1\"\n          type=\"radio\"\n          name=\"tab\"\n          className=\"sign-in\"\n          checked={this.props.renderSignIn}\n          onChange={this.props.onSignInClick}\n        >\n        </input>\n        <label htmlFor=\"tab-1\" className=\"tab\">Sign In</label>\n        <input\n          id=\"tab-2\"\n          type=\"radio\"\n          name=\"tab\"\n          className=\"sign-up\"\n          checked={!this.props.renderSignIn}\n          onChange={this.props.onSignUpClick}\n        >\n        </input><label htmlFor=\"tab-2\" className=\"tab\">Sign Up</label>\n        <div className=\"login-form\">\n          <SignInFunc \n            onSignIn={this.props.onSignIn}\n          />\n          <SignUpFunc\n            onSignUp={this.props.onSignUp}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default FormCard\n","import React, { useState } from 'react';\nimport Alert from \"react-bootstrap/Alert\"\nfunction ErrorAlert(props) {\n  const [show, setShow] = useState(true);\n  if (show) {\n    return (\n      <Alert \n        variant=\"danger\"\n        onClose={() => {setShow(false); props.onClose();}}\n        dismissible\n      >\n        <p>\n          {props.msg}\n        </p>\n      </Alert>\n    );\n  } else {\n    return null\n  }\n}\n\nexport default ErrorAlert\n","import React, { useState } from 'react';\nimport Alert from \"react-bootstrap/Alert\"\nfunction Success(props) {\n  const [show, setShow] = useState(true);\n  if (show) {\n    return (\n      <Alert\n        variant=\"success\"\n        onClose={() => {setShow(false); props.onClose();}}\n        dismissible\n      >\n        <p>\n          {props.msg}\n        </p>\n      </Alert>\n    );\n  } else {\n    return null\n  }\n}\n\nexport default Success\n","import React, { Component } from 'react';\nimport 'whatwg-fetch';\nimport {\n  getToken,\n  getFromLocalStorage,\n  setInLocalStorage,\n  setInSessionStorage,\n  storageKey\n} from '../utils/storage';\n\nimport { Redirect } from 'react-router';\n\nimport LoadingScreen from \"../generic/LoadingScreen\"\nimport FormCard from \"./FormCard\"\nimport \"./style.css\"\nimport ErrorAlert from \"../messages/Error\"\nimport Success from \"../messages/Success\"\n\nimport 'react-inputs-validation/lib/react-inputs-validation.min.css';\n\nconst verifyURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/api/account/verify\"\nconst signUpURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/api/account/signup\"\nconst signInURL = 'https://us-central1-athlos-live.cloudfunctions.net/athlos-server/api/account/signin'\n\n// stores token in localstorage if user clicked remember me\n// else stores it in session storage\nfunction storeToken(remember, token) {\n  if (remember) {\n    setInLocalStorage(storageKey, { token })\n  } else {\n    setInSessionStorage(storageKey, { token })\n  }\n}\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoading: true,\n      signedIn: false,\n      token: '',\n      renderSignIn: true, // specifies whether the card should show signin or signup\n      errorMsgs: new Set(),\n      successMsgs: new Set(),\n    };\n\n    this.displayErrors = this.displayErrors.bind(this)\n    this.showSuccesses = this.showSuccesses.bind(this)\n    this.showError = this.showError.bind(this)\n    this.showSuccess = this.showSuccess.bind(this)\n\n    this.switchToSignIn = this.switchToSignIn.bind(this)\n    this.switchToSignUp = this.switchToSignUp.bind(this)\n\n    this.clearSignUp = this.clearSignUp.bind(this)\n    this.clearSignIn = this.clearSignIn.bind(this)\n\n    this.onSignIn = this.onSignIn.bind(this);\n    this.onSignUp = this.onSignUp.bind(this)\n    this.tokenLogin = this.tokenLogin.bind(this)\n  }\n  \n  componentDidMount() {\n    console.log(\"mounting...\")\n    // get the localstorage object which may contain the _id token\n    const obj = getFromLocalStorage(storageKey)\n    // there was a token in local storage\n    if (obj && obj.token) {\n      try {\n        this.tokenLogin(obj.token)\n      } catch(err) {\n        throw err\n      }\n    } else { // there was no token in local storage\n      this.setState({\n        isLoading: false,\n      })\n    }\n  }\n\n  clearSignIn() {\n    this.setState({\n      isLoading: false,\n      signInEmail: '',\n      signInPassword: '',\n      remember: false,\n    })\n  }\n\n  clearSignUp() {\n    console.log(\"clearing...\")\n    this.setState({\n      isLoading: false,\n      signUpEmail: '',\n      signUpPassword: '',\n      signUpPasswordConf: '',\n      signUpFirstName: '',\n      signUpLastName: '',\n      signUpUserName: '',\n    })\n  }\n\n  // MAKE SURE TO DISALLOW WHITELISTED SPECIAL CHARACTERS\n  // MAKE SURE TO VALIDATE INPUTS ON SERVER SIDE EVENTUALLY\n  // checks if there is a token in localstorage for login\n  async tokenLogin(token) {\n    console.log(\"token is: \", token)\n\n    // add the token in the headers\n    var headers = new Headers()\n    headers.append(\"authorization\", `Bearer ${token}`)\n\n    // Verify token\n    var res = await fetch(verifyURL, {\n      method: \"GET\",\n      headers,\n    })\n    var json = await res.json()\n    if (json.success) {\n      this.setState({\n        token,\n        signedIn: true,\n        isLoading: false\n      })\n    } else {\n      console.log(\"verification of token went wrong\")\n      console.log(json.messages)\n      this.setState({\n        isLoading: false,\n      })\n    }\n  }\n\n  // MAKE SURE TO DISALLOW WHITELISTED SPECIAL CHARACTERS\n  // MAKE SURE TO VALIDATE INPUTS ON SERVER SIDE EVENTUALLY\n  async onSignUp(values) {\n    // every entry must be true for all input fields to be valid\n    this.setState({ errorMsgs: [], successMsgs: []})\n    console.log(\"signing up...\")\n    var {\n      signUpEmail,\n      signUpPassword,\n      signUpPasswordConf,\n      signUpFirstName,\n      signUpLastName,\n      signUpUsername,\n    } = values\n\n    // Post request to backend\n    var res = await fetch(signUpURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password: signUpPassword,\n        passwordConf: signUpPasswordConf,\n        email: signUpEmail,\n        firstName: signUpFirstName,\n        lastName: signUpLastName,\n        username: signUpUsername\n      }),\n    })\n    var json = await res.json()\n    console.log('json', json);\n    if (json.success) {\n      this.setState({ successMsgs: new Set([...json.messages]) })\n      this.clearSignUp()\n      this.signUpValid = [false, false, false, false, false, false]\n    } else {\n      var newErrors = new Set([...json.messages])\n      this.setState({isLoading: false, errorMsgs: newErrors})\n    }\n  }\n\n  // MAKE SURE TO DISALLOW WHITELISTED SPECIAL CHARACTERS\n  // MAKE SURE TO VALIDATE INPUTS ON SERVER SIDE EVENTUALLY\n  async onSignIn(values) {\n    this.setState({ errorMsgs: [], successMsgs: [] })\n    // Grab state\n    const {\n      signInEmail,\n      signInPassword,\n      remember\n    } = values;\n    console.log(\"signing in...\")\n    const stored = getFromLocalStorage(storageKey)\n\n    if (signInEmail === \"test\") {\n      this.setState({isLoading: false})\n    }\n\n    // if there's already a token in local storage log then just login with that\n    // THIS MIGHT BE BUGGY\n    if (stored && stored.token) {\n      alert(\"token already present\")\n      var { token } = stored\n      return await this.tokenLogin(token)\n    }\n\n    this.setState({\n      isLoading: true,\n    });\n\n    // Post request to backend\n    var res = await fetch(signInURL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email: signInEmail,\n        password: signInPassword,\n        remember,\n      }),\n    })\n    var json = await res.json()\n    console.log('json', json);\n    if (json.success) {\n      // store the token in localstorage\n      // should overwrite any existing expired tokens\n      storeToken(remember, json.token);\n\n      this.setState({\n        isLoading: false,\n        signInPassword: '',\n        signInEmail: '',\n        token: json.token, // still keep the token in the state to get activity queries\n        signedIn: true,\n      });\n      this.clearSignIn()\n    } else {\n      console.log(json)\n      this.setState(prevState => ({\n        isLoading: false,\n        errorMsgs: new Set([...prevState.errorMsgs, ...json.messages])\n      }))\n    }\n  }\n\n  // takes in an object of error messages and returns html elements to display them\n  showError(msg, idx) {\n    const onClose = () => {\n      this.setState(prevState => ({\n        errorMsgs: new Set( [...prevState.errorMsgs].filter(errMsg => errMsg !== msg))\n      }))\n    }\n    return ( <ErrorAlert msg={msg} key={idx} onClose={onClose}/> )\n  }\n\n  // Shows all the errors due to bad signin or signup\n  displayErrors() {\n    var errorMsgs = [...this.state.errorMsgs]\n    return errorMsgs.map(this.showError)\n  }\n\n  //shows a signle success message\n  showSuccess(msg, idx) {\n    const onClose = () => {\n      this.setState(prevState => ({\n        successMsgs: new Set([...prevState.successMsgs].filter(successMsg => successMsg !== msg))\n      }))\n    }\n    return ( <Success msg={msg} key={idx} onClose={onClose} /> )\n  }\n\n  // shows success messages\n  showSuccesses() {\n    var successMsgs = [...this.state.successMsgs]\n    return successMsgs.map(this.showSuccess)\n  }\n\n  //switches from signup to signin on the card\n  switchToSignIn() {\n    this.setState({\n      renderSignIn: true\n    })\n  }\n\n  //switches from signin to signup on the card\n  switchToSignUp() {\n    this.setState({\n      renderSignIn: false\n    })\n  }\n\n  render() {\n    console.log(\"rendering login\")\n    const {\n      isLoading,\n    } = this.state;\n\n    if (isLoading) {\n      return (<div><p>Loading...</p></div>);\n    }\n\n    if (!getToken()) {\n      return (\n        <div className=\"body\">\n          <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Open+Sans:600\"></link>\n\n          <div className=\"login-wrap\">\n            <div className=\"login-html\">\n              <div className=\"errors-container\">\n                {this.displayErrors()}\n              </div>\n              <div className=\"success-container\">\n                {this.showSuccesses()}\n              </div>\n              <LoadingScreen />\n              <FormCard\n                renderSignIn={this.state.renderSignIn}\n                onSignInClick={this.switchToSignIn}\n                onSignUpClick={this.switchToSignUp}\n\n                signUpValid={this.signUpValid}\n                signInValid={this.signInValid}\n\n                onSignIn={this.onSignIn}\n                onSignUp={this.onSignUp}\n              />\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      // token is in the state and user has logged in!\n      return (\n        <div>\n          <Redirect\n            to={{\n              pathname: \"/app\",\n              state: { token: this.state.token }\n            }}\n          />\n        </div>\n      );\n    }\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport LoadingScreen from \"../generic/LoadingScreen\"\nimport queryString from \"query-string\"\nimport {\n  withRouter\n} from \"react-router-dom\";\nimport {\n  getFromLocalStorage,\n  removeFromLocalStorage,\n  setInLocalStorage,\n  storageKey\n} from '../utils/storage';\nimport Error from \"../messages/Error\"\nimport \"./style.css\"\n\nclass Confirmation extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      errors: false,\n      isLoading: true\n    }\n    this.renderDisplay = this.renderDisplay.bind(this)\n  }\n\n  componentDidMount() {\n    // get the token parameter in the URI\n    var queryValues = queryString.parse(this.props.location.search)\n    var emailToken = queryValues.token\n    console.log(queryValues)\n\n    const confirmUrl = `https://us-central1-athlos-live.cloudfunctions.net/athlos-server/confirmation?token=${emailToken}`\n    // send request to server to verify confirmation, and add registration to database\n    fetch(confirmUrl, {\n      method: \"GET\"\n    })\n      .then(res => res.json())\n      .then((json) => {\n        console.log(json)\n        if (json.success) {\n          this.setState({\n            isLoading: false,\n          })\n        } else {\n          // set error message in local storage\n          setInLocalStorage(storageKey + \"_confirmationErr\", json.messages)\n          this.setState({\n            errors: true,\n            isLoading: false,\n          })\n        }\n      })\n    .catch((err) => {\n      if (err) throw err\n    })\n  }\n\n  // takes in an object of error messages and returns html elements to display them\n  showError(msg, idx) {\n    return (\n      <Error msg={msg} key={idx} onClose={() => {}}/>\n    )\n  }\n\n  displayErrors() {\n    var confirmationErrors = getFromLocalStorage(storageKey + \"_confirmationErr\")\n    removeFromLocalStorage(storageKey + \"_confirmationErr\")\n    // thoroughly check if it is empty object or not\n    console.log(\"confirmation error should display...\")\n    if (confirmationErrors !== null) {\n      var msgArray = Object.values(confirmationErrors)\n      return msgArray.map(this.showError)\n    }\n  }\n\n  renderDisplay() {\n    if (this.state.isLoading) {\n      return (\n        <div>\n          <LoadingScreen />\n        </div>\n      )\n    } else if (!this.state.errors) {\n      // no errors\n      return (\n        // MESSAGE SAYING YOU'RE GOOD TO GO TO LOGIN,\n        // PROBABLY A NAVLINK OR SOMETHING TO LOGIN PAGE\n        <React.Fragment>\n          <h5 className=\"card-header conf-header\">You're All Set!</h5>\n          <div className='card-body text-center'>\n            <p>\n              Your registration was successful! Click below to return to the login page.\n            </p>\n            <div\n              className=\"navLink\"\n              onClick={() => {this.props.history.push(\"/\")}}\n            >\n              Back to login\n            </div>\n            {/* <NavLink activeClassName=\"navLink\" to=\"/\">Back to login</NavLink> */}\n          </div>\n        </React.Fragment>\n      )\n    } else {\n      return (\n        <React.Fragment>\n          <h5 className=\"card-header conf-header-error\">Oh No :(</h5>\n          <div className=\"card-body text-center errors-container\">\n            {this.displayErrors()}\n          </div>\n        </React.Fragment>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className='conf-page'>\n        <div className='card m-5'>\n          {this.renderDisplay()}              \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Confirmation)\n","import React, { Component } from 'react';\nimport queryString from \"query-string\"\nimport {\n  getFromLocalStorage,\n  setInStorage,\n} from '../utils/storage';\n\nimport { makeID } from \"../utils/keyGenerator\"\n\nconst confirmPwRestUrl = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/confPasswordReset\"\nconst verifyUrl = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/api/account/verify\"\n\nconst storageKey = makeID(8)\n\nclass PwResetPage extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      validToken: true,\n      newPwText: '',\n      newPwTextConf: '',\n    }\n\n    this.onNewPassChange = this.onNewPassChange.bind(this)\n    this.onNewPassConfChange = this.onNewPassConfChange.bind(this)\n    this.onSubmit = this.onSubmit.bind(this)\n  }\n\n  // verify that the token in the url is valid\n  componentDidMount() {\n    // get the token parameter in the URI\n    var queryValues = queryString.parse(this.props.location.search)\n    var emailToken = queryValues.token\n    var headers = new Headers()\n    headers.append(\"authorization\", `Bearer ${emailToken}`)\n\n    fetch(verifyUrl, {\n      method: \"GET\",\n      headers,\n    })\n      .then(body => body.json())\n      .then((json) => {\n        // the token from the link is invalid\n        if (!json.success) {\n          // var errorMsg = \"Either the link has expired (12 hours) or something went wrong with the server. Please try again.\"\n          alert(\"verification from the mail link went wrong\")\n          // SHOW THAT THERE WAS AN ERROR AND EXPLAIN WHY IN HTML\n        } else {\n          setInStorage(storageKey + \"_email\", json.token)\n        }\n      })\n    .catch((err) => {throw err})\n  }\n\n  onNewPassChange(e) {\n    this.setState({\n      newPwText: e.target.value\n    })\n  }\n\n  onNewPassConfChange(e) {\n    this.setState({\n      newPwTextConf: e.target.value\n    })\n  }\n\n  onSubmit() {\n    console.log(\"submitted!\")\n    var { newPwText, newPwTextConf } = this.state\n    if (newPwText !== newPwTextConf) {\n      return alert(\"passwords must match!\")\n    }\n\n    var reqBody = {\n      newPassword: newPwText,\n      email: getFromLocalStorage(storageKey + \"_email\").email\n    }\n    console.log(reqBody)\n    // update the password\n    fetch(confirmPwRestUrl, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(reqBody)\n    })\n      .then(body => body.json())\n      .then((json) => {\n        if (json.success) {\n          alert(\"success\")\n          // display message saying password successfully reset\n        } else {\n          alert(\"something went wrong: \", json)\n          // something went wrong\n        }\n      })\n    .catch((err) => {throw err})\n  }\n\n  render() {\n    return (\n      <div>\n      <form onSubmit={this.onSubmit}>\n        <div className=\"group\">\n          <label htmlFor=\"new-pass\">enter new password</label>\n          <input\n            id=\"new-pass\"\n            type=\"password\"\n            className=\"input\"\n            data-type=\"password\"\n            pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n            title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\n            onChange={this.onNewPassChange}\n          />\n        </div>\n        <div className=\"group\">\n          <label htmlFor=\"new-pass-reap\">confirm enter new password</label>\n          <input\n            id=\"new-pass-reap\"\n            type=\"password\"\n            className=\"input\"\n            data-type=\"password\"\n            pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\"\n            title=\"Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters\"\n            onChange={this.onNewPassConfChange}\n          />\n        </div>\n        <div className=\"group\">\n          <input type=\"submit\" className=\"button\" value=\"Submit\" id=\"submitNewPassButton\" />\n        </div>\n      </form>\n      </div>\n    )\n  }\n}\n\nexport default PwResetPage\n","import React from 'react'\nconst SpaContext = React.createContext()\nexport default SpaContext","import React, { Component } from 'react';\nimport \"./style/css/Searchbar.css\"\n\n\nclass Searchbar extends Component {\n\n  render() {\n    return (\n      <div className=\"search-box\" onMouseLeave={this.props.mouseLeave}>\n        <form onSubmit={this.props.search}>\n          <input\n            type=\"text\"\n            name=\"\"\n            className=\"search-txt\"\n            placeholder=\"Type to search\"\n            onChange={this.props.onSearchTextChange}\n            value={this.props.searchText}\n          />\n          <div className='search-btn'>\n            <i className=\"fas fa-search\"></i>\n            <input\n              className=\"search-btn-input\"\n              type='submit'\n              value=''\n            />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Searchbar\n","const getBestsURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/getBests\"\nconst getProfileURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/getProfilePic\"\nconst getUsernameURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/getUsername\"\n\n/**\n * gets the bests of a user given their id\n */\nexport async function getBests(id) {\n  var reqBody = { id }\n  var res = await fetch(getBestsURL, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(reqBody)\n  })\n  var bestsJson = await res.json()\n  if (bestsJson.success) {\n    return bestsJson.bests\n  }\n  alert(\"could not get bests for id: \", id)\n}\n\n/**\n * gets the profile pic url of the user \n * given their user id in Mongo\n */\nexport async function getProfile(id) {\n  var reqBody = { id }\n  var res = await fetch(getProfileURL, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(reqBody)\n  })\n  var profileJson = await res.json()\n  if (profileJson.success) {\n    return profileJson.profilePicture.profileURL\n  }\n  alert(\"could not get profile url for id: \", id)\n}\n\nexport async function getUsername(id) {\n  var reqBody = { id }\n  var res = await fetch(getUsernameURL, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(reqBody)\n  })\n  var usernameJson = await res.json()\n  if (usernameJson.success) {\n    return usernameJson.username\n  }\n  alert(\"could not get profile url for id: \", id)\n}\n\n// module.exports = {\n//   getBests, \n//   getProfile, \n//   getUsername,\n// }","import React from 'react'\n\n// FUNCTIONAL COMPONENT FOR DISPLAY FRIENDS AND FRIEND REQUESTS\n// IN A LIST FORMAT FOR THE COMMUNITY COMPONENT\nexport default function FriendDisplay(props) {\n\n  function renderRelationship() {\n    if (props.isFriend) {\n      return (\n        <div className='rank'>\n          {`Rank: ${props.rank}`}\n        </div>\n      )\n    } else if (props.isFriendRequest) {\n      return (\n        <div\n          className='accept-request-btn'\n          onClick={props.onAcceptRequest}\n        >\n          Accept\n        </div>\n      )\n    } else {\n      return (\n        <div className='send-req-btn'>\n          Request Sent/Add Friend\n        </div>\n      )\n    }\n  }\n\n  function showStats() {\n    // make request to get their settings and only display if they allow it\n    return (\n      <React.Fragment>\n        <div className='stat'>\n          tot steps\n        </div>\n        <div className='stat'>\n          tot laps\n        </div>\n        <div className='stat'>\n          highest jump\n        </div>\n      </React.Fragment>\n    )\n  }\n\n  return (\n    // total display should be flex with row direction\n    <li\n      className=\"list-group-item friend-display\"\n    >\n      <div className='img-container'>\n        <img\n          src={(props.profileUrl ? props.profileUrl : props.defaultProfile)}\n          alt={props.imgAlt}\n          onClick={props.onClick}\n        />\n      </div>\n      {/* display should be flex with col direction */}\n      <div className='user-info'>\n        <div className='top-row ml-3'>\n          <div className='name-container'>\n            <strong className='name' onClick={props.onClick}>{props.firstName} {props.lastName}</strong>\n          </div>\n          {/* put an icon to the left. This shows the rank, accept req button, or send req button*/}\n          {renderRelationship()}\n        </div>\n        {/* display this depending on their settings */}\n        <div className='bot-row ml-3'>\n          {showStats()}\n        </div>\n      </div>\n    </li>\n  )\n}","import React, { Component } from 'react';\n// const friendReqURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/getFriendReqs\"\nimport {\n  getBests,\n  getProfile,\n  getUsername\n} from \"../../utils/userInfo\"\nimport FriendDisplay from \"./FriendDisplay\"\nimport { withRouter } from 'react-router-dom'\nconst defaultProfile = 'default'\nconst imgAlt = 'alt'\n\nclass FriendRequests extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      friendRequestListItems: []\n    }\n    this.createFriendRequests = this.createFriendRequests.bind(this)\n  }\n\n  async componentDidMount() {\n    await this.createFriendRequests()\n  }\n\n  async createFriendRequests() {\n    // onClick function definition\n    var { friendRequests, addFriendToState, removeFriendReq, acceptRequest } = this.props\n    var liTags = []\n    const onClick = () => {\n      this.props.history.push(`/app/profile/${username}`)\n    }\n    const onAcceptRequest = () => {\n      acceptRequest(id, firstName, lastName);\n      removeFriendReq(id);\n      addFriendToState(id, firstName, lastName);\n    }\n    for (let i = 0; i < friendRequests.length; i++) {\n      var { id, firstName, lastName } = friendRequests[i]\n      var [username, bests, profileUrl] = await Promise.all([getUsername(id), getBests(id), getProfile(id)])\n      liTags.push(\n        <FriendDisplay \n          key={id}\n          isFriend={false}\n          isFriendRequest={true}\n          onClick={onClick}\n          onAcceptRequest={onAcceptRequest}\n          profileUrl={profileUrl}\n          defaultProfile={defaultProfile}\n          imgAlt={imgAlt}\n          firstName={firstName}\n          lastName={lastName}\n          bests={bests}\n        />\n      )\n    }\n    this.setState({ friendRequestListItems: liTags })\n  }\n\n  render() {\n    return (\n      <div className=\"friend-requests\" style={protoStyle}>\n        <h4>requests... {this.props.numRequests}</h4>\n        <ul className=\"friend-requests-list\">\n          {this.state.friendRequestListItems}\n        </ul>\n      </div>\n    )\n  }\n}\n\nconst protoStyle = {\n  \"marginTop\": \"100px\"\n}\n\nexport default withRouter(FriendRequests)\n","import React, { Component } from 'react'\nimport {\n  withRouter\n} from \"react-router-dom\";\n\nclass CommunityHeader extends Component {\n  render() {\n    console.log(this.props)\n    return (\n      <div className=\"community-header\">\n        <nav className=\"navbar navbar-expand sticky bg-light\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <span \n                className='nav-link mr-3' \n                onClick={() => {this.props.setDisplay('friends')}}\n              >\n                Friends\n              </span>\n            </li>\n            <li className=\"nav-item mr-3\">\n              <span\n                className='nav-link'\n                onClick={() => {this.props.setDisplay('requests')}}\n              >\n                Requests\n              </span>\n            </li>\n            <li className=\"nav-item\">\n              <span\n                className='nav-link'\n                onClick={() => {this.props.setDisplay('search')}}\n              >\n                Search\n              </span>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(CommunityHeader)\n","import React, { Component } from 'react'\nimport SpaContext from '../../Context';\n\nclass Friends extends Component {\n  render() {\n    var { friendTableRows } = this.context\n    return (\n      <div>\n        <ul className=\"list-group list-group-flush\">\n          {friendTableRows}\n        </ul>\n      </div>\n    )\n  }\n}\n\nFriends.contextType = SpaContext\n\nexport default Friends\n","import {\n  getToken,\n} from '../utils/storage';\nimport {\n  NavLink,\n} from \"react-router-dom\";\n\nimport React, { Component } from 'react'\nimport Searchbar from \"./Searchbar\"\nimport FriendRequests from \"./friends/FriendRequests\"\nimport CommunityHeader from \"./header/CommunityHeader\"\nimport Friends from \"./friends/Friends\"\n\nimport SpaContext from '../Context'\nimport \"./style/css/Community.css\"\nconst searchURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/searchUser\"\nconst friendReqURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/sendFriendReq\"\n// const getUserInfoURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/getUserInfo\"\nconst tokenToID = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/tokenToID\"\nconst acceptFriendURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/acceptRequest\"\nconst imgAlt = \"default\"\nclass Community extends Component {\n  // used to keep track of mounting lifecycle\n  // sometimes components in the router get\n  // mounted, the unmounted right away, still dont know why\n  _isMounted = false\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      display: 'friends',\n      searches: [],\n      searchText: \"\",\n      showQueries: false,\n      emptySearch: false,\n      numFriendsDisplay: 25,\n    }\n    this.renderSearch = this.renderSearch.bind(this)\n    this.search = this.search.bind(this)\n    this.onSearchTextChange = this.onSearchTextChange.bind(this)\n    this.mouseLeave = this.mouseLeave.bind(this)\n    this.sendReq = this.sendReq.bind(this)\n    this.addFriendToState = this.addFriendToState.bind(this)\n    this.removeFriendReq = this.removeFriendReq.bind(this)\n    this.acceptRequest = this.acceptRequest.bind(this)\n    this.clearSearch = this.clearSearch.bind(this)\n    this.setDisplay = this.setDisplay.bind(this)\n    this.renderDisplay = this.renderDisplay.bind(this)\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n    console.log('community has unmounted')\n  }\n\n  componentDidMount() {\n    console.log(\"community has mounted\")\n    this._isMounted = true\n  }\n\n  setDisplay(newDisplay) {\n    this.setState({ display: newDisplay })\n  }\n\n  removeFriendReq(id) {\n    console.log(\"removing friend with id: \", id)\n    var { friendRequests } = this.context\n    // remove friend object from requests with id\n    var removed = friendRequests.filter((friend) => {\n      return friend.senderID !== id\n    })\n    console.log(\"removed\", removed)\n    this.setState({\n      friendRequests: removed,\n    })\n  }\n\n  addFriendToState(id, firstName, lastName) {\n    var { friends } = this.context\n    var friendObject = { id, firstName, lastName }\n    this.setState({\n      friends: [...friends, friendObject]\n    })\n  }\n\n  onSearchTextChange(e) {\n    this.setState({\n      searchText: e.target.value\n    })\n  }\n\n  async search(e) {\n    e.preventDefault()\n    var { searchText } = this.state\n    var userToken = getToken()\n\n    var reqBody = {\n      searchText,\n      userToken,\n    }\n\n    if (this.state.searchText) {\n      var res = await fetch(searchURL, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(reqBody),\n      })\n      var json = await res.json()\n      if (!json.success) {\n        // DISPLAY SOME SORT OF ERROR\n        alert(json.message)\n      }\n      var { users } = json\n      if (users === undefined || users.length === 0) {\n        this.setState({\n          emptySearch: true,\n        })\n      } else {\n        console.log(users)\n        this.setState({\n          searches: users,\n          showQueries: true,\n          emptySearch: false\n        })\n      }\n    }\n  }\n\n  mouseLeave() {\n    this.setState({\n      searchText: \"\"\n    })\n  }\n\n  async decodeToken() {\n    // send request to server to decode stored token into the user id\n    var userToken = getToken()\n    var headers = new Headers()\n    headers.append(\"authorization\", `Bearer ${userToken}`)\n    var res = await fetch(tokenToID, {method: \"GET\", headers})\n    var json = await res.json()\n    var { userID } = json\n    return userID\n  }\n\n  async sendReq(_id, receiverFirstName, receiverLastName, receiverUsername) {\n    // emit event using web socket to server\n    var { socket } = this.context\n    var { firstName, lastName, username } = this.context\n\n    // get decoded userID\n    var userID = await this.decodeToken()\n    var userToken = getToken()\n    console.log(\"sending request\", userID)\n    socket.emit(\"sendFriendRequest\", {\n      senderID: userID,\n      senderFirstName: firstName,\n      senderLastName: lastName,\n      senderUsername: username,\n      receiverID: _id,\n    })\n\n    var body = JSON.stringify({\n      token: userToken,\n      senderFirstName: firstName,\n      senderLastName: lastName,\n      senderUsername: username,\n      receiverID: _id,\n      receiverFirstName,\n      receiverLastName,\n      receiverUsername,\n    })\n\n    fetch(friendReqURL, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body,\n    })\n      .then(res => res.json())\n      .then((json) => {\n        console.log(JSON.stringify(json))\n      })\n    .catch((err) => {throw err})\n  }\n\n  async acceptRequest(senderID, senderFirstName, senderLastName) {\n    // SENDER refers to the FRIEND REQUEST SENDER\n    var userToken = getToken()\n    var { firstName, lastName } = this.context\n    // send notification to server\n    var { socket } = this.context\n    var userID = this.decodeToken()\n    socket.emit(\"acceptFriendRequest\", { userID, receiverFirstName: firstName, receiverLastName: lastName, otherFriendID: senderID })\n\n    var reqBody = {\n      userToken,\n      receiverFirstName: firstName,\n      receiverLastName: lastName,\n      senderID,\n      senderFirstName,\n      senderLastName,\n    }\n\n    var res = await fetch(acceptFriendURL, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(reqBody)\n    })\n    var json = await res.json()\n    console.log(\"json message: \", json.message)\n  }\n\n  clearSearch() {\n    // set search state data to inital state\n    this.setState({\n      searchText: \"\",\n      searches: [],\n      showQueries: false,\n      emptySearch: false,\n    })\n  }\n\n  renderSearch() {\n    var liTags = []\n    var { searches, emptySearch } = this.state\n    var { friends, friendRequests, friendsPending, rootURL } = this.context\n\n    // put the user ids into a set for easy lookup\n    // apparently these constructors don't work on IE 11\n    var friendSet = new Set(friends.map(user => user.id))\n    var requestSet = new Set(friendRequests.map(user => user.id))\n    var pendingSet = new Set(friendsPending.map(user => user.id))\n\n    // if user just searched name not in database\n    if (emptySearch) {\n      liTags.push(\n        <div className=\"empty-search-container\" key=\"empty-key\">\n          <span>No search results :( try being more specific</span>\n        </div>\n      )\n    }\n\n    var displayButton = (user, friendSet, requestSet, pendingSet) => {\n      // console.log(user, friendSet, requestSet, pendingSet)\n      var { firstName, lastName, _id, username} = user\n      if (friendSet.has(_id)) {\n        return (\n          <React.Fragment>\n            <i className=\"fas fa-check ml-1 mr-1\"></i>\n            <span className='mr-1'>Friends</span>\n          </React.Fragment>\n        )\n      } else if (requestSet.has(_id)) {\n        return (\n          <div\n            className='rel-wrapper'              \n            onClick={() => {\n              this.acceptRequest(_id, firstName, lastName)\n              this.removeFriendReq(_id)\n              this.addFriendToState(_id, firstName, lastName)\n            }}\n          >\n            <i className=\"fas fa-user-plu req-sent ml-1 mr-1\"></i>\n            <span className='accept-req-btn'>\n              accept\n            </span>\n          </div>\n        )\n      } else if (pendingSet.has(_id)) {\n        return (\n          <React.Fragment>\n            <i className=\"fas fa-user-plu req-sent ml-1 mr-1\"></i>\n            <span className=''>Request Sent</span>\n          </React.Fragment>\n        )\n      } else {\n        return (\n            <div\n              className='rel-wrapper'\n              onClick={() => {this.sendReq(_id, firstName, lastName, username)}}\n            >\n              <i className=\"fas fa-user-plu req-sent ml-1 mr-1\"></i>\n              <span className='add-friend-btn ml-1'>Add</span> \n            </div>\n        )\n      }\n    }\n\n    searches.forEach((user, i) => {\n      var { firstName, lastName, _id, username, profilePicture } = user\n      // capitalize first and last name before displaying\n      firstName = firstName.charAt(0).toUpperCase() + firstName.slice(1)\n      lastName  = lastName.charAt(0).toUpperCase() + lastName.slice(1)\n      liTags.push(\n        <div key={_id + \"_search\"} className=\"user-container\">\n          <img\n            src={profilePicture.profileURL}\n            alt={imgAlt}\n          ></img>\n          <NavLink\n            to={{pathname: `${rootURL}/profile/${username}`}}\n            className='search-name ml-3'\n          >\n            {firstName}, {lastName}\n          </NavLink>\n          <div className='search-relationship'>\n            {displayButton(user, friendSet, requestSet, pendingSet)}\n          </div>\n        </div>\n      )\n    })\n\n    liTags.push(\n      <div className=\"clear-search-container mt-3\" key=\"clear-search-container\">\n        <span onClick={this.clearSearch}>Clear Search</span>\n      </div>\n    )\n    return liTags\n  }\n\n  renderDisplay() {\n    var { display } = this.state\n    var { context } = this\n    display = display.toLowerCase()\n    if (display === 'friends') {\n      return <Friends />\n    } else if (display === 'requests') {\n      return (\n        <FriendRequests\n          userToken={getToken()}\n          userFirstName={context.userFirstName}\n          userLastName={context.userLastName}\n          addFriendToState={this.addFriendToState}\n          removeFriendReq={this.removeFriendReq}\n          friendRequests={context.friendRequests}\n          friendsPending={context.friendsPending}\n          friends={context.friends}\n          numRequests={context.numRequests}\n          acceptRequest={this.acceptRequest}\n        />\n      )     \n    } else if (display === 'search') {\n      return (\n        <div className='search-wrapper'>\n          <h4>Search for users</h4>\n          <Searchbar\n            search={this.search}\n            onSearchTextChange={this.onSearchTextChange}\n            mouseLeave={this.mouseLeave}\n            searchText={this.state.searchText}\n          />\n          <div className={\"queries\" + (this.state.showQueries ? \" expand\" : \" collapsed\")}>\n            {this.renderSearch()}\n          </div>\n        </div>\n      )\n    } else {\n      console.log('display is not friends, requests, or search')\n      return null\n    }\n  }\n\n  render() {\n    return (\n      //<Header />\n      <div className=\"community-container\">\n        <CommunityHeader \n          setDisplay={this.setDisplay}\n        />\n        {this.renderDisplay()}\n      </div>\n    )\n  }\n}\n\nCommunity.contextType = SpaContext\n\nexport default Community\n","import React, {Component} from 'react'\nimport SpaContext from \"../../Context\"\n\nclass ImageSlide extends Component {\n  constructor(props) {\n    super(props)\n    this.getLabels = this.getLabels.bind(this)\n    this.renderNum = this.renderNum.bind(this)\n    // this.renderSecondary = this.renderSecondary.bind(this)\n  }\n\n  getLabels(action) {\n    var { unitSystem } = this.context.settings\n    if (action === \"run\") {\n      return {\n        numLabel: \"steps\",\n        secondaryLabel: (unitSystem === \"metric\") ? \"km\" : \"miles\"\n      }\n    } else if (action === \"swim\") {\n      // CHANGE THIS BASED ON SWIMMING PART OF SETTINGS\n      return {\n        numLabel: \"laps\",\n        secondaryLabel: (unitSystem === \"metric\") ? \"m\" : \"yds\"\n      }\n    } else {\n      return {\n        numLabel: \"jumps\",\n        secondaryLabel: (unitSystem === \"metric\") ? \"cm\" : \"in\"\n      }\n    }\n  }\n\n  renderNum(stats, indexDisplay) {\n    var { activityData } = stats\n    var labels = this.getLabels(stats.action)\n    var num = activityData.length === 0 ? 0 : activityData[indexDisplay].num\n    return ( <span> {`${num} ${labels.numLabel}`} </span> )\n  }\n\n  render() {\n    var { stats, indexDisplay, renderSecondary } = this.props\n    return (\n      <div className={`imageSlide ${stats.action}`}> \n        <img src={stats.imageUrl} alt=\"loading...\"/>\n        {this.renderNum(stats, indexDisplay)}\n        {renderSecondary()}\n      </div>\n    )\n  }\n}\nImageSlide.contextType = SpaContext\nexport default ImageSlide\n","import React from 'react'\n\nconst Arrow = ({ direction, clickFunction, glyph, activity }) => (\n  <div\n    className={ `slide-arrow ${direction} ${activity}` }\n    onClick={ clickFunction }\n  >\n    { glyph }\n  </div>\n);\nexport default Arrow\n","// these functions convert to the system that you pass in\n// most of these are for the edit profile form fields\nconst kgToLbs = (2.20462 / 1.0)\nconst lbsToKg = (1.0 / 2.20462)\nconst inToCm = (2.54 / 1.0)\nconst cmToIn = (1.0 / 2.54)\nconst ftToCm = (30.48 / 1.0)\n\n// system is the system you wanna display in\n// returns 'num kg' or 'num lbs'\nfunction weightConvert(system, weight) {\n  if (!system) return \"\"\n  var parsed = weight.split(\" \") // [num units]\n  var units = parsed[1]\n  weight = parsed[0]\n  system = system.toLowerCase()\n  var convertedWeight = weight\n  if (system === \"english\" && units === \"kg\") {\n    //convert kg to lbs, 1kg = 2.20462 lbs\n    convertedWeight = Math.round(parseInt(weight) * kgToLbs)\n    units = \"lbs\"\n  } else if (system === \"metric\" && units === \"lbs\") {\n    // convert lbs to kg\n    convertedWeight = Math.round(parseInt(weight) * lbsToKg)\n    units = \"kg\"\n  }\n  return convertedWeight.toString() + \" \" + units\n}\n\n// system is the system you wanna display in\n// returns 'num ft num in' or 'num cm'\nfunction heightConvert(system, height) {\n  if (!system) return \"\"\n  var parsed = height.split(\" \") // either [num, ft, num, in] or [num, cm]\n  system = system.toLowerCase()\n  var convertedHeight = height\n  if (system === \"english\" && parsed[1] === \"cm\") {\n    //convert cm to in, then in to ft and in\n    var heightInCm = parsed[0]\n    convertedHeight = `${parseInt(heightInCm) * cmToIn} in`\n  } else if (system === \"metric\" && parsed[1] === \"ft\") {\n    // convert ft, in to cm\n    let feet = parseInt(parsed[0])\n    let inches = parseInt(parsed[2])\n    convertedHeight = `${Math.round((feet * ftToCm) + (inches * inToCm)).toString()} cm`\n  }\n  return convertedHeight.toString()\n}\n\n// takes height in inches and returns 'num ft num in'\nfunction englishHeight(height) {\n  var feet = Math.floor(height / 12)\n  var inches = Math.round(height - (12 * feet))\n  return `${feet} ft ${inches} in`\n}\n\n// FOR RAW DOUBLES\n// the system that the height passed in is in\nfunction rawHeightConvert(system, verticalHeight) {\n  // want it in metric system\n  var converted = (system === \"metric\") ? verticalHeight * inToCm : verticalHeight * cmToIn\n  return parseFloat(converted).toFixed(2)\n}\n\nfunction parseDate(date) {\n  // parses the UTC date object\n  var dateString = date.toString()\n  // [Day, Month, month date, year, time, Standard, Standard (written out)]\n  var parsed = dateString.split(\" \")\n  return parsed\n}\n\nexport { weightConvert, heightConvert, englishHeight, parseDate, rawHeightConvert }\n","import ImageSlide from \"./ImageSlide\"\nimport \"./Carousel.css\"\nimport Arrow from \"./Arrow\"\nimport React from 'react'\nimport { parseDate } from \"../../utils/unitConverter\"\n// const jumpActivity = \"jump\"\n// const runActivity = \"run\"\n// const swimActivity = \"swim\"\n\nclass Carousel extends React.Component {\n  getDropdownDates(stats) {\n    var { dropdownItemClick } = this.props\n    var dropdownItems = []\n    stats.activityData.forEach((session, idx) => {\n      var parsed = parseDate(new Date(session.uploadDate))\n      var dayMonth = parsed[0] + \", \" + parsed[1] + \" \" + parsed[2]\n      dropdownItems.push(\n        <span\n          className=\"dropdown-item\"\n          key={\"dropdown_\" + idx}\n          id={idx}\n          onClick={dropdownItemClick}\n        >\n          {dayMonth}\n        </span>\n      )\n    })\n    return dropdownItems\n  }\n\n  render() {\n    var { stats, previousSlide, nextSlide, activityIndex, displayDate, renderSecondary } = this.props\n    return (\n      <div className=\"carousel\">\n        <div className=\"btn-group dropdown\">\n          <button\n            className=\"btn btn-secondary btn-sm mt-3 dropdown-toggle\"\n            type=\"button\"\n            data-toggle=\"dropdown\"\n            aria-haspopup=\"true\"\n            aria-expanded=\"false\"\n          >\n            {displayDate()}\n          </button>\n          <div className=\"dropdown-menu activities-dropdown\">\n            {this.getDropdownDates(stats)}\n          </div>\n        </div>\n\n        <div className=\"slideShow\">\n          <Arrow\n            direction=\"left\"\n            clickFunction={ previousSlide }\n            glyph=\"&#8249;\"\n            activity={stats.action}\n          />\n\n          <ImageSlide\n            stats={stats}\n            indexDisplay={activityIndex}\n            renderSecondary={renderSecondary}\n          />\n\n          <Arrow\n            direction=\"right\"\n            clickFunction={ nextSlide }\n            glyph=\"&#8250;\"\n            activity={stats.action}\n          />\n        </div>\n      </div>\n    )\n  }\n}\nexport default Carousel\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default function Calories( props ) {\n  return (\n    <div className=\"calories-circle\">\n      <FontAwesomeIcon icon=\"fire-alt\"/>\n      <span>{props.cals}</span>\n    </div>\n  )\n}\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default function Duration( props ) {\n  return (\n    <div className=\"duration-circle\">\n      <FontAwesomeIcon icon=\"clock\"/>\n      <span>{props.duration / 10}</span>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport { Chart, Bar } from 'react-chartjs-2';\n// import Hammer from \"hammerjs\";\nimport zoom from 'chartjs-plugin-zoom'\nclass Past extends Component {\n  componentWillMount(){\n    Chart.pluginService.register(zoom)\n  }\n\n  render() {\n    var { labels, data, hoverLabel, yAxisMin, yAxisMax, chartTitle } = this.props\n    return (\n      <div>\n        <Bar\n          data={{\n            labels: labels,\n            datasets: [{\n                label: hoverLabel,\n                data: data,\n                backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                borderColor: 'rgba(255, 99, 132, 1)',\n                borderWidth: 1\n            }]\n          }}\n          options={{\n            maintainAspectRatio: true,\n            plugins: {\n              zoom: false,\n              // zoom: {\n              //   zoom: {\n              //     enable: false,\n              //   },\n              //   pan: {\n              //     // Boolean to enable panning\n              //     enabled: true,\n\n              //     // Panning directions. Remove the appropriate direction to disable\n              //     // Eg. 'y' would only allow panning in the y direction\n              //     // A function that is called as the user is panning and returns the\n              //     // available directions can also be used:\n              //     //   mode: function({ chart }) {\n              //     //     return 'xy';\n              //     //   },\n              //     mode: 'x',\n\n              //     // Function called while the user is panning\n              //     onPan: function({chart}) { console.log(`I'm panning!!!`); },\n              //     // Function called once panning is completed\n              //     onPanComplete: function({chart}) { console.log(`I was panned!!!`); }\n              //   }\n              // }\n            },\n            title: {\n              text: chartTitle,\n              display: true,\n              fontSize: 16\n            },\n            legend: {\n              display: false,\n              position: 'right'\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  min: yAxisMin,\n                  max: yAxisMax\n                }\n              }]\n            },\n            responsive: true\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Past\n","import React from 'react'\nimport Doughnut from \"react-chartjs-2\"\nexport default function RunDoughnut( props ) {\n  return (\n    <div>\n      <Doughnut\n        data={{\n          datasets: [{\n            data: props.data,\n            backgroundColor: props.colors\n          }],\n          labels: props.labels\n        }}\n        options={{\n          plugins: {\n            zoom: false,\n          },\n          legend: {\n            display: true,\n          },\n          responsive: true,\n          maintainAspectRatio: false,\n        }}\n      />\n    </div>\n  )\n}\n","import React, {Component} from 'react'\nimport SpaContext from \"../Context\"\nimport { parseDate } from \"../utils/unitConverter\"\n\n// HOC for run, swim, jump fitness pages.\n// reuses label and data getting for:\n// 1. past laps/jumps/steps (num)\n// 2. Carousel display\n// 3. Cals and duration circles\n// 4. details link button\n// 5. pace/jump/time (swim) progressions (swim still adds laps of each stroke done)\n// 6. average jumps/steps/laps (num)\n// 7. percentToGoal ? \n\nfunction reverse(array) {\n  var i = 0,\n      n = array.length,\n      middle = Math.floor(n / 2),\n      temp = null;\n\n  for (; i < middle; i += 1) {\n     temp = array[i];\n     array[i] = array[n - 1 - i];\n     array[n - 1 - i] = temp;\n  }\n}\n\nexport default function withFitnessPage( WrappedComponent ) {  \n  class WithFitnessPage extends Component {\n    constructor(props) {\n      super(props)\n    \n      this.state = {\n        activityIndex: 0,\n        pastGraphLabels: [],\n        pastGraphData: [],\n        progressionLabels: [],\n        progressionDate: [], \n      }\n      this.nextSlide = this.nextSlide.bind(this);\n      this.previousSlide = this.previousSlide.bind(this);\n      this.makePastGraphLabels = this.makePastGraphLabels.bind(this)\n      this.makePastGraphData = this.makePastGraphData.bind(this)\n      this.dropdownItemClick = this.dropdownItemClick.bind(this)\n      this.displayDate = this.displayDate.bind(this)\n      this.calcAvgNum = this.calcAvgNum.bind(this)\n      this.calcAvgCals = this.calcAvgCals.bind(this)\n    }\n\n    componentDidMount() {\n      console.log('mounted')\n      this.makePastGraphLabels()\n      this.makePastGraphData()\n    }\n\n    roundToNDecimals(num, decimals) {\n      return parseFloat(num).toFixed(decimals)\n    }\n\n    isNullOrUndefined(input) {\n      return (input == null)\n    }\n\n    // gets the labels for the graph that displays num field over past upload dates\n    makePastGraphLabels() {\n      var pastGraphLabels = []\n      // can be either run, jump or swimming json\n      var { activityJson } = this.props\n      activityJson.activityData.forEach((session, idx) => {\n        var { uploadDate } = session\n        var stringToDate = new Date(uploadDate)\n        // this is an array\n        var dateInfo = parseDate(stringToDate)\n        pastGraphLabels.push(dateInfo[0] + \", \" + dateInfo[1] + \" \" + dateInfo[2])\n      })\n      reverse(pastGraphLabels)\n      this.setState({ pastGraphLabels })\n    }\n\n    makePastGraphData() {\n      var pastGraphData = []\n      var { activityJson } = this.props\n      activityJson.activityData.forEach((session, idx) => {\n        var { num } = session\n        pastGraphData.push(num)\n      })\n      reverse(pastGraphData)\n      this.setState({ pastGraphData })\n      //debugger\n    }\n\n    // returns Day of week, month day (num) in a string format\n    // i.e Sat, Jul 20\n    displayDate() {\n      var { activityJson } = this.props\n      var { activityIndex } = this.state\n      if (activityJson.activityData.length === 0) {\n        return \"No uploads yet\"\n      }\n      var { uploadDate } = activityJson.activityData[activityIndex]\n      var parsed = parseDate(new Date(uploadDate))\n      var date = parsed[0] + \", \" + parsed[1] + \" \" + parsed[2]\n      return date\n    }\n\n    dropdownItemClick(e) {\n      // on dropdown date click, display that date on the dropdown,\n      // and switch the image slider to display that date\n      this.setState({ activityIndex: parseInt(e.target.id) })\n    }\n\n    calcAvgNum() {\n      // Activity json contains all the queried activity data\n      // NOTE THIS IS NOT THE TRUE AVG SINCE THE QUERY IS AT MAX\n      // (50) DOCUMENTS OF ACTIVITY DATA\n      var { activityData } = this.props.activityJson\n      var avg = 0\n      var count = 0\n      activityData.forEach((session, idx) => {\n        avg += session.num\n        count += 1\n      })\n      return (count === 0) ? 0 : Math.round(avg / count)\n    }\n\n    calcAvgCals() {\n      var { activityData } = this.props.activityJson\n      var avg = 0\n      var count = 0\n      activityData.forEach((session, idx) => {\n        avg += session.calories\n        count += 1\n      })\n      return (count === 0) ? 0 : Math.round(avg / count)\n    }\n\n    previousSlide() {\n      //debugger\n      var { activityData } = this.props.activityJson\n      var nextIndex = Math.min((this.state.activityIndex + 1), activityData.length - 1)\n      this.setState({ activityIndex: nextIndex })\n    }\n  \n    nextSlide() {\n      // 0 represents the most recent upload date\n      var nextIndex = Math.max((this.state.activityIndex - 1), 0)\n      this.setState({ activityIndex: nextIndex })\n    }\n\n    render() {\n      var { activityIndex, pastGraphData, pastGraphLabels } = this.state\n      return (\n        <div>\n          <WrappedComponent\n            pastGraphData={pastGraphData}\n            pastGraphLabels={pastGraphLabels}\n            activityIndex={activityIndex}\n            dropdownItemClick={this.dropdownItemClick}\n            displayDate={this.displayDate}\n            nextSlide={this.nextSlide}\n            previousSlide={this.previousSlide}\n            calcAvgNum={this.calcAvgNum}\n            calcAvgCals={this.calcAvgCals}\n            isNullOrUndefined={this.isNullOrUndefined}\n            roundToNDecimals={this.roundToNDecimals}\n            {...this.props}\n          />\n        </div>\n      )\n    }\n  }\n  WithFitnessPage.contextType = SpaContext\n  \n  return WithFitnessPage\n}\n\n","import React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2';\n// import Hammer from \"hammerjs\";\n// import zoom from 'chartjs-plugin-zoom'\n\nexport default class LineProgression extends Component {\n  componentWillMount(){\n    // Chart.pluginService.register(zoom)\n  }\n\n  render() {\n    var { labels, data, hoverLabel, yAxisMin, yAxisMax, displayDate } = this.props\n    console.log(labels, data)\n    /**\n     * labels: for the x axis have time\n     * data: paces data array\n     * hoverLabel: \"Pace\"\n     * activity: \"Pace progression\"\n     * yaxisMin: 0\n     * yaxisMax: some ratio of steps / time based on user config\n     */\n    return (\n      <div>\n        <Line\n          data={{\n            labels: labels,\n            datasets: [{\n              label: hoverLabel,\n              data: data,\n              backgroundColor: 'rgba(255, 99, 132, 0.2)',\n              borderColor: 'rgba(255, 99, 132, 1)',\n              borderWidth: 1\n            }]\n          }}\n          options={{\n            maintainAspectRatio: true,\n            plugins: {\n              zoom: false,\n              // zoom: {\n              //   zoom: {\n              //     enabled: false,\n              //   },\n              //   pan: {\n              //     // Boolean to enable panning\n              //     enabled: true,\n\n              //     // Panning directions. Remove the appropriate direction to disable\n              //     // Eg. 'y' would only allow panning in the y direction\n              //     // A function that is called as the user is panning and returns the\n              //     // available directions can also be used:\n              //     //   mode: function({ chart }) {\n              //     //     return 'xy';\n              //     //   },\n              //     mode: 'x',\n\n              //     // Function called while the user is panning\n              //     onPan: function({chart}) { console.log(`I'm panning!!!`); },\n              //     // Function called once panning is completed\n              //     onPanComplete: function({chart}) { console.log(`I was panned!!!`); }\n              //   }\n              // }\n            },\n            title: {\n              text: `pace on ${displayDate()}`,\n              display: true,\n              fontSize: 16\n            },\n            legend: {\n              display: false,\n              position: 'right'\n            },\n            scales: {\n              yAxes: [{\n                ticks: {\n                  min: yAxisMin,\n                  max: yAxisMax\n                }\n              }]\n            },\n            responsive: true\n          }}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Carousel from \"../carousel/Carousel\"\nimport Calories from \"../Calories\"\nimport Duration from \"../Duration\"\nimport SpaContext from '../../Context'\nimport Past from \"../charts/Past\"\nimport RunDoughnut from \"./RunDoughnut\"\nimport withFitnessPage from \"../withFitnessPage\"\nimport PaceLineProgression from \"../charts/PaceLineProgression\"\n\n// btw restPaceMin and walkPaceMax is walking\n// greater that walkPaceMax is running\nconst walkPaceMax = 2.314 // 130 steps per minute is a fast walk, which is 2.16 steps/sec, 2.314 (.2sec) / step\n// anything above restPaceMax is resting\nconst restPaceMin = 5 // say 60 steps per minute is basically resting. 1 step/sec, 5 (.2sec) / step\n\nclass Run extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      paceLabels: [],\n      paceDate: [], \n    }\n    this.estimateDistanceRun = this.estimateDistanceRun.bind(this)\n  }\n\n  componentDidMount() {\n    console.log('mounted')\n  }\n\n  makeDoughnutData() {\n    var runCount = 0\n    var walkCount = 0\n    var count = 0\n    var { activityData } = this.context.runJson\n    activityData.forEach((session, i) => {\n      session.paces.forEach((pace, j) => {\n        // if pace is somehow undefined or NaN or null then skip\n        if (!(!pace || isNaN(pace))) {\n          if (pace > walkPaceMax) {\n            runCount += 1\n          } else if (pace > restPaceMin && pace < walkPaceMax) {\n            walkCount += 1\n          }\n          count += 1\n        } else {\n          console.log(\"this pace entry is corrupted somehow...\")\n        }\n      })\n    })\n    if (count === 0) {\n      return [0, 0, 0]\n    }\n    var runPercent = runCount / count\n    var walkPercent = walkCount / count\n    return [runPercent, walkPercent, 1 - (runPercent + walkPercent)]\n  }\n\n  calcAvgPace() {\n    var { activityData } = this.context.runJson\n    var avg = 0\n    var count = 0\n    activityData.forEach((session, i) => {\n      session.paces.forEach((pace, j) => {\n        avg += pace\n        count += 1\n      })\n    })\n    return (count === 0) ? 0 : avg / count\n  }\n\n  estimateDistanceRun() {\n    var { settings } = this.context\n    var { unitSystem } = settings\n    // this means the person's height is in cm, display km\n    if (unitSystem === \"metric\") {\n\n    } else {\n      // person's height in inches, display miles\n    }\n    return \"estimated dist\"\n  }\n\n  // returns an array of time labels for a given paces array\n  // and the total time the user spent on running mode\n  makePaceLabels(paces, totalTime) {\n    let timeInterval = Math.floor(totalTime / paces.length)\n    let timeSeries = Array(paces.length)\n\n    // add 1 to length of paces array cuz you wanna start with 0\n    // on the display chart\n    for (let i = 0; i < paces.length + 1; i++) {\n      timeSeries[i] = `${Math.floor(timeInterval * i / 10)} sec`\n    }\n    return timeSeries\n  }\n\n  render() {\n    var { runJson } = this.context\n\n    // from withFitnessPage\n    var {\n      activityIndex,\n      pastGraphData,\n      pastGraphLabels,\n      dropdownItemClick,\n      displayDate,\n      nextSlide,\n      previousSlide,\n      calcAvgNum,\n      calcAvgCals,\n      isNullOrUndefined\n    } = this.props\n\n    var currentStatDisplay = runJson.activityData[activityIndex]\n    return (\n      <div className=\"run-container\">\n        <Carousel\n          stats={runJson}\n          previousSlide={previousSlide}\n          nextSlide={nextSlide}\n          activityIndex={activityIndex}\n          displayDate={displayDate}\n          dropdownItemClick={dropdownItemClick}\n          renderSecondary={this.estimateDistanceRun}\n        />\n        <div className=\"row\">\n          <div className=\"col-4\" align=\"center\">\n            <Calories \n              cals={isNullOrUndefined(currentStatDisplay) ? 0 : currentStatDisplay.calories}\n            />\n          </div>\n          <div className=\"col-4\" align=\"center\">\n            \n          </div>\n          <div className=\"col-4\" align=\"center\">\n            <Duration \n              duration={isNullOrUndefined(currentStatDisplay) ? 0 : currentStatDisplay.time}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          {/* eventually configure the min and max of y axis */}\n          <div className=\"col\">\n            <Past\n              chartTitle=\"Previous Runs\"\n              labels={pastGraphLabels}\n              data={pastGraphData}\n              hoverLabel=\"Steps\"\n              activity=\"Runs\"\n              yAxisMin={0}\n              yAxisMax={Math.max(...pastGraphData)}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\">\n            <PaceLineProgression\n              activity=\"Pace Progression\"\n              displayDate={displayDate}\n              data={[0, ...currentStatDisplay.paces]} // add 0 to beginning of paces array to indicate 0 pace at time 0\n              labels={this.makePaceLabels(currentStatDisplay.paces, currentStatDisplay.time)}\n              hoverLabel=\"Pace\"\n              yAxisMin={0}\n              yAxisMax={Math.max(...currentStatDisplay.paces) + 2}\n            />\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-6\">\n            <div className=\"card text-center\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Avg Steps per Session</h5>\n                {calcAvgNum()}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"card text-center\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Avg Pace per Session</h5>\n                {this.calcAvgPace()}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-6\">\n            <div className=\"card text-center\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Avg Cals per Session</h5>\n                {calcAvgCals()}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"card text-center\">\n              <div className=\"card-body\">\n                <RunDoughnut\n                  labels={['% run', '% walk', '% rest']}\n                  data={this.makeDoughnutData()}\n                  colors={[\n                    'rgba(102, 255, 102, 0.4)',\n                    'rgba(255, 255, 0, 0.4)',\n                    'rgba(255, 51, 0, 0.4)',\n                  ]}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nRun.contextType = SpaContext\nexport default withFitnessPage(Run)\n","import React, { Component } from 'react'\nimport Carousel from \"../carousel/Carousel\"\nimport Calories from \"../Calories\"\nimport Duration from \"../Duration\"\nimport SpaContext from '../../Context'\nimport Past from \"../charts/Past\"\nimport withFitnessPage from \"../withFitnessPage\"\nimport { rawHeightConvert } from \"../../utils/unitConverter\" \n\nclass Jump extends Component {\n  constructor(props) {\n    super(props)\n    this.getCurrentBestHeight = this.getCurrentBestHeight.bind(this)\n  }\n\n  calcAvgHeight() {\n    var { activityData } = this.context.jumpJson\n    var avg = 0\n    var count = 0\n    activityData.forEach((session, i) => {\n      session.heights.forEach((height, j) => {\n        avg += height; count += 1;\n      })\n    })\n    // show only 2 decimal digits\n    return (count === 0) ? 0 : parseFloat(avg / count).toFixed(2)\n  }\n\n  getCurrentBestHeight() {\n    var { unitSystem } = this.context.settings\n    var { activityData } = this.context.jumpJson\n    var { activityIndex } = this.props\n    if (activityData.length === 0) { return null }\n    var session = activityData[activityIndex]\n    var best = Math.max(...session.heights)\n    best = unitSystem === \"metric\" ? rawHeightConvert(unitSystem, best) : best\n    return (\n      <span>\n        {\"highest: \" + best + (unitSystem === \"metric\" ? \" cm\" : \" in\")}\n      </span>\n    )\n  }\n\n  render() {\n    var { jumpJson, settings, bests } = this.context\n    var { unitSystem } = settings\n    var {\n      activityIndex,\n      pastGraphData,\n      pastGraphLabels,\n      dropdownItemClick,\n      displayDate,\n      nextSlide,\n      previousSlide,\n      calcAvgNum,\n      calcAvgCals,\n      isNullOrUndefined\n    } = this.props\n    var currentStatDisplay = jumpJson.activityData[activityIndex]\n    console.log(pastGraphData)\n    return (\n      <div className=\"jump-container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Carousel\n              stats={jumpJson}\n              previousSlide={previousSlide}\n              nextSlide={nextSlide}\n              activityIndex={activityIndex}\n              displayDate={displayDate}\n              dropdownItemClick={dropdownItemClick}\n              renderSecondary={this.getCurrentBestHeight}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-4\" align=\"center\">\n            <Calories \n              cals={isNullOrUndefined(currentStatDisplay) ? 0 : currentStatDisplay.calories}\n            />\n          </div>\n          <div className=\"col-4\" align=\"center\">\n            {/* don't need details from jump rn\n            <Details detailsLink={jumpLink}/> */}\n          </div>\n          <div className=\"col-4\" align=\"center\">\n            <Duration \n              duration={isNullOrUndefined(currentStatDisplay) ? 0 : currentStatDisplay.time}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          {/* eventually configure the min and max of y axis */}\n          <div className=\"col\">\n            <Past\n              chartTitle=\"Previous Sessions\"\n              labels={pastGraphLabels}\n              data={pastGraphData}\n              hoverLabel=\"Jumps\"\n              activity=\"Jumps\"\n              yAxisMin={0}\n              yAxisMax={20}\n            />\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-6\">\n            <div className=\"card text-center\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Avg Jumps per Session</h5>\n                {calcAvgNum()}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"card text-center\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Avg height per Session</h5>\n                {this.calcAvgHeight() + \" \" + (unitSystem === \"metric\" ? \"cm\" : \"in\")}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-6\">\n            <div className=\"card text-center\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Avg Cals per Session</h5>\n                {calcAvgCals()}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"card text-center\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Overall Best</h5>\n                {bests.jump}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nJump.contextType = SpaContext\nexport default withFitnessPage(Jump)\n","import React from 'react'\nimport {\n  NavLink,\n} from \"react-router-dom\"\n\nexport default function Details( props ) {\n  return (\n    <div className=\"mt-3\">\n      <NavLink\n        className=\"btn btn-primary\"\n        id=\"details\"\n        to={props.detailsLink}\n      >\n        details\n      </NavLink>\n    </div>\n  )\n}\n","import React from 'react'\nimport Doughnut from \"react-chartjs-2\"\n\nexport default function SwimDoughnut( props ) {\n  return (\n    <div>\n      <Doughnut\n        data={{\n          datasets: [{\n            data: props.data,\n            backgroundColor: props.colors\n          }],\n          labels: props.labels\n        }}\n        options={{\n          legend: {\n            display: false,\n          },\n          responsive: true,\n          maintainAspectRatio: false,\n        }}\n      />\n    </div>\n  )\n}","import React, { Component } from 'react'\nimport Carousel from \"../carousel/Carousel\"\nimport Calories from \"../Calories\"\nimport Duration from \"../Duration\"\nimport Details from \"../Details\"\nimport SpaContext from '../../Context'\nimport Past from \"../charts/Past\"\nimport withFitnessPage from \"../withFitnessPage\"\nimport SwimDoughnut from \"./SwimDoughnut\"\n\nconst metersToYards = 1.0 / 1.09361\nconst yardsToMeters = 1.0 / 0.9144\nconst swimLink = \"/app/swimDetails\"\n\nclass Swim extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       \n    }\n    this.calculateDistance = this.calculateDistance.bind(this)\n    this.calcAvgSpeed = this.calcAvgSpeed.bind(this)\n  }\n\n  calculateDistance(currentStatDisplay) {\n    var { swimLap, unitSystem } = this.context.settings\n    const { roundToNDecimals, isNullOrUndefined } = this.props\n    unitSystem = unitSystem.toLowerCase()\n    if (isNullOrUndefined(currentStatDisplay)) {\n      return 0\n    }\n    var { num } = currentStatDisplay\n    if (swimLap === \"50 m\") {\n      let distanceInMeters = 50 * num\n      return (unitSystem === \"metric\" ? \n              distanceInMeters : \n              roundToNDecimals(distanceInMeters * metersToYards, 2))\n    } else if (swimLap === \"25 m\") {\n      let distanceInMeters = 25 * num\n      return (unitSystem === \"metric\" ? \n              distanceInMeters : \n              roundToNDecimals(distanceInMeters * metersToYards, 2))\n    } else {\n      // 25yd\n      let distanceInYards = 25 * num\n      return (unitSystem === \"english\" ? \n              distanceInYards : \n              roundToNDecimals(distanceInYards * yardsToMeters, 2))\n    }\n  }\n\n  calcAvgSpeed() {\n    var { activityData } = this.props.activityJson\n    var { swimLap, unitSystem } = this.context.settings\n    const { roundToNDecimals, isNullOrUndefined } = this.props\n    if (isNullOrUndefined(activityData)) {\n      return 0\n    }\n    // returns [50/25, m/yd] both as strings\n    var distMetric = swimLap.split(\" \")\n    var distance = 0; var time = 0;\n    // var incrementDistance = (distance, distMetric) => {\n    //   return distance + distMetric\n    // }\n    activityData.forEach((session, i) => {\n      var { lapTimes, num } = session\n      // sum over all times in the lapTimes array\n      time += lapTimes.reduce((a, b) => a + b, 0)\n      // add 50/25 * the number of laps done\n      distance = distMetric[0] * num\n    })\n    // now have average distance / time in either m/s or yd/s\n    var avgSpeed = (distance === 0 ? 0 : distance / time)\n\n    if (distMetric[1] === \"yd\") {\n      // avg speed is in yds / s\n      return (unitSystem === \"metric\" ?\n              roundToNDecimals(avgSpeed * yardsToMeters, 2) :\n              avgSpeed)\n    } else {\n      // avg speed is in meters / s\n      return (unitSystem === \"metric\" ?\n              avgSpeed :\n              roundToNDecimals(avgSpeed * metersToYards, 2))\n    }\n  }\n\n  calcAvgTimePerLap() {\n    var { activityData } = this.props.activityJson\n    const { roundToNDecimals, isNullOrUndefined } = this.props\n    if (isNullOrUndefined(activityData)) {\n      return 0\n    }\n    var totalTime = 0; var totalNumLaps = 0;\n    activityData.forEach((session, idx) => {\n      totalTime += session.lapTimes.reduce((a, b) => a + b, 0)\n      totalNumLaps += session.num\n    })\n    return roundToNDecimals(totalTime / totalNumLaps, 2)\n  }\n\n  makeDoughnutData() {\n    var { activityData } = this.props.activityJson\n    const { isNullOrUndefined } = this.props\n    if (isNullOrUndefined(activityData)) {\n      return 0\n    }\n    var flyCount    = 0, \n        backCount   = 0,\n        breastCount = 0,\n        freeCount   = 0;\n    activityData.forEach((session, i) => {\n      session.strokes.forEach((stroke, j) => {\n        let lowerCaseStroke = stroke.toLowerCase()\n        if (lowerCaseStroke === \"u\") {\n          flyCount += 1\n        } else if (lowerCaseStroke === \"b\") {\n          backCount += 1\n        } else if (lowerCaseStroke === \"r\") {\n          breastCount += 1\n        } else if (lowerCaseStroke === \"f\") {\n          freeCount += 1\n        }\n      })\n    })\n    return [flyCount, backCount, breastCount, freeCount]     \n  }\n  \n  render() {\n    var { settings, swimJson } = this.context\n    var { unitSystem } = settings\n    var {\n      activityIndex,\n      pastGraphData,\n      pastGraphLabels,\n      dropdownItemClick,\n      displayDate,\n      nextSlide,\n      previousSlide,\n      calcAvgNum,\n      calcAvgCals,\n      isNullOrUndefined,\n    } = this.props\n    // this could be undefined if user has no recorded data\n    var currentStatDisplay = swimJson.activityData[activityIndex]\n    // 50m, 25yd, or 25m\n    return (\n      <div className=\"swim-container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <Carousel\n              stats={swimJson}\n              previousSlide={previousSlide}\n              nextSlide={nextSlide}\n              activityIndex={activityIndex}\n              displayDate={displayDate}\n              dropdownItemClick={dropdownItemClick}\n              renderSecondary={this.calculateDistance}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          <div className=\"col-4\" align=\"center\">\n            <Calories \n              cals={isNullOrUndefined(currentStatDisplay) ? 0 : currentStatDisplay.calories}\n            />\n          </div>\n          <div className=\"col-4\" align=\"center\">\n            <Details detailsLink={swimLink}/>\n          </div>\n          <div className=\"col-4\" align=\"center\">\n            <Duration \n              duration={isNullOrUndefined(currentStatDisplay) ? 0 : currentStatDisplay.time}\n            />\n          </div>\n        </div>\n        <div className=\"row\">\n          {/* eventually configure the min and max of y axis */}\n          <div className=\"col\">\n            <Past\n              chartTitle=\"Previous Swims\"\n              labels={pastGraphLabels}\n              data={pastGraphData}\n              hoverLabel=\"Laps\"\n              activity=\"Swims\"\n              yAxisMin={0}\n              yAxisMax={50}\n            />\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-6\">\n            <div className=\"card text-center\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Avg Laps per Session</h5>\n                {calcAvgNum()}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"card text-center\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Avg Speed per Lap</h5>\n                {this.calcAvgSpeed() + \" \" + (unitSystem === \"metric\" ? \"m/s\" : \"yd/s\")}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-6\">\n            <div className=\"card text-center\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Avg Time per Lap</h5>\n                {this.calcAvgTimePerLap() + \" seconds\"}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"card text-center\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Avg Strokes per Lap</h5>\n                avg strokes\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row mt-3\">\n          <div className=\"col-6\">\n            <div className=\"card text-center\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Avg Cals per Session</h5>\n                {calcAvgCals()}\n              </div>\n            </div>\n          </div>\n          <div className=\"col-6\">\n            <div className=\"card text-center\">\n              <div className=\"card-body\">\n                <h5 className=\"card-title\">Stroke Distribution</h5>\n                <SwimDoughnut\n                  data={this.makeDoughnutData()}\n                  labels={[\"laps fly\", \"laps back\", \"laps breast\", \"laps free\"]}\n                  colors={[\n                    'rgba(102, 255, 102, 0.4)',\n                    'rgba(255, 255, 0, 0.4)',\n                    'rgba(255, 51, 0, 0.4)',\n                    'rgba(255, 153, 0, 0.4)',\n                  ]}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nSwim.contextType = SpaContext\nexport default withFitnessPage(Swim)\n","import React, { Component } from 'react'\nimport Run from \"./run/Run\"\nimport Jump from \"./jump/Jump\"\nimport Swim from \"./swim/Swim\"\nimport \"./Fitness.css\"\nimport SpaContext from \"../Context\"\n// import { CSSTransition, TransitionGroup } from 'react-transition-group'\nimport './fitnessTransitions.css'\n\nclass Fitness extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      display: true,\n      activityDisplay: \"\", // which activity to display\n    }\n    this.renderActivity = this.renderActivity.bind(this)\n    this.changeActivityDisplay = this.changeActivityDisplay.bind(this)\n  }\n\n  renderActivity() {\n    var { activityDisplay } = this.state\n    var { runJson, jumpJson, swimJson } = this.context\n    if (activityDisplay === \"run\") {\n      return ( <Run id='run' activityJson={runJson}/> )\n    } else if (activityDisplay === \"jump\") {\n      return ( <Jump id='jump' activityJson={jumpJson}/> )\n    } else if (activityDisplay === \"swim\") {\n      return ( <Swim id='swim' activityJson={swimJson}/> )\n    } else {\n      return ( <div className='no-activity-container'> <span>pick an activity</span> </div>)\n    }\n  }\n\n  changeActivityDisplay(activity) {\n    //debugger;\n    this.setState({\n      activityDisplay: activity,\n      showTransition: true,\n    })\n  }\n\n  render() {\n    var { activityDisplay } = this.state\n    return (\n      <div className=\"fitness-container\">\n        <div className=\"card-header fitness-header\">Activity:</div>\n        <nav className=\"navbar navbar-expand navbar-text sticky bg-light\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item mx-4\">\n              <span \n                className={`run-link nav-link ${(activityDisplay === \"run\") ? \"active\" : \"\"}`}\n                onClick={() => {this.changeActivityDisplay(\"run\")}}\n              >\n                Run\n              </span>\n            </li>\n            <li className=\"nav-item mx-4\">\n              <span\n                className={`swim-link nav-link ${(activityDisplay === \"swim\") ? \"active\" : \"\"}`}\n                onClick={() => {this.changeActivityDisplay(\"swim\")}}\n              >\n                Swim\n              </span>\n            </li>\n            <li className=\"nav-item mx-4\">\n              <span\n                className={`jump-link nav-link ${(activityDisplay === \"jump\") ? \"active\" : \"\"}`}\n                onClick={() => {this.changeActivityDisplay(\"jump\")}}\n              >\n                Jump\n              </span>\n            </li>\n          </ul>\n        </nav>\n        {/* <TransitionGroup>\n          <CSSTransition\n            key={this.state.activityDisplay}\n            timeout={600}\n            classNames='fitnessFade'\n          > */}\n            { this.renderActivity() }\n          {/* </CSSTransition>\n        </TransitionGroup> */}\n      </div>\n    )\n  }\n}\n\n// consume the context provided by the SPA\nFitness.contextType = SpaContext\n\nexport default Fitness;\n","import React, { Component } from 'react'\nimport { Line } from 'react-chartjs-2';\nimport \"chartjs-plugin-zoom\"\nimport \"hammerjs\";\nimport \"./DateBar.css\"\n\n// converts data to correct format for linear chart with smooth panning\nfunction convertData(data) {\n  var newData = {}\n  newData = data.map((d, i) => {\n    return {\n      x: i,\n      y: d\n    }\n  })\n  return newData\n}\n\nclass DateBar extends Component {\n  render() {\n    return (\n      <div style={{\n        overflowX: \"scroll\",\n        width: \"300px\"\n      }}>\n          <Line\n            data={{\n              labels: this.props.labels,\n              datasets: [{\n                  // label: 'awef',\n                  data: convertData(this.props.data),\n                  backgroundColor: 'rgba(255, 99, 132, 0.2)',\n                  borderColor: 'rgba(255, 99, 132, 1)',\n                  borderWidth: 1\n              }]\n            }}\n            options={{\n              scales: {\n                xAxes: [{\n                  type: \"linear\",\n                  ticks: {\n                    stepSize: 1,\n                    maxRotation: 0,\n                  },\n                  position: \"bottom\",\n                  scaleLabel: {\n                    display: true,\n                    labelString: \"Jump\"\n                  },\n                }],\n                yAxes: [{\n                  type: \"linear\"\n                }]\n              },\n              animation: {\n                easing: \"easeInOutSine\",\n                duration: \"1500\"\n              },\n              maintainAspectRatio: false,\n              title: {\n                text: \"Date\",\n                display: true,\n                fontSize: 16\n              },\n              legend: {\n                display: false,\n                position: 'right'\n              },\n              responsive: true,\n              plugins: {\n                zoom: {\n                  pan: {\n                    enabled: true,\n                    mode: 'x',\n                    speed: 2,\n                    threshold: 10\n                  },\n                  zoom: {\n                    enabled: true,\n                    mode: 'x',\n                    limits: {\n                      max: 10,\n                      min: 0.5\n                    }\n                  }\n                }\n              }\n            }}\n          />\n      </div>\n    )\n  }\n}\n\nexport default DateBar\n","import React, { Component } from 'react'\n// import { Doughnut, Bar, Pie } from 'react-chartjs-2';\nimport DateBar from \"../charts/DateBar\"\nimport Past from \"../charts/Past\"\nimport SpaContext from \"../../Context\"\nimport {getToken, localStorageKey} from \"../../utils/storage\"\nconst dataURL = 'https://us-central1-athlos-live.cloudfunctions.net/athlos-server/data'\n\nclass RunDetails extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      labels: [],\n      data: [],\n    }\n\n    this.setJumpData = this.setJumpData.bind(this)\n  }\n\n  componentDidMount() {\n    this.setJumpData()\n  }\n  // fetches data by making request to server\n  // updates the state if successfull\n  setJumpData() {\n    var headers = new Headers()\n    var token = getToken(localStorageKey)\n    headers.append(\"authorization\", `Bearer ${token}`)\n    headers.append(\"activity\", \"run\")\n\n    fetch(dataURL, {\n      method: \"GET\",\n      headers: headers,\n    })\n      .catch( (err) => {\n        throw err\n      })\n      .then( (response) => {\n        return response.json()\n      })\n      .then((json) => {\n        if (json.success) {\n          // debugger;\n          let chartLabels = this.makeLabels(json)\n          let chartData = this.getData(json)\n          this.setState({\n            labels: chartLabels,\n            data: chartData\n          })\n        } else {\n          alert(json.message)\n        }\n      })\n  }\n\n  makeLabels(json) {\n    // debugger\n    var labels = []\n    for (var i = 1; i < json.heights.length + 1; i++) {\n      labels.push(i)\n    }\n    return labels\n  }\n\n  // each data entry is a vertical height in inches\n  getData(json) {\n    var data = []\n    var heights = json.heights\n    heights.forEach(h => {\n      data.push(h)\n    })\n    return data\n  }\n\n  render() {\n    return (\n      <div>\n        <DateBar\n          labels={this.state.labels}\n          data={this.state.data}\n        />\n        <Past\n          labels={this.state.labels}\n          data={this.state.data}\n        />\n      </div>\n    )\n  }\n}\n\nRunDetails.contextType = SpaContext\nexport default RunDetails\n","import React, { Component } from 'react'\nimport { Bar } from 'react-chartjs-2';\n\nclass SwimDetails extends Component {\n  render() {\n    return (\n      <Bar\n        data={{\n          labels: this.props.labels,\n          datasets: [{\n              label: 'quantity',\n              data: this.props.data,\n              backgroundColor: [\n                  'rgba(255, 99, 132, 0.2)',\n                  'rgba(54, 162, 235, 0.2)',\n                  'rgba(255, 206, 86, 0.2)',\n                  'rgba(75, 192, 192, 0.2)',\n                  'rgba(153, 102, 255, 0.2)',\n                  'rgba(255, 159, 64, 0.2)'\n              ],\n              borderColor: [\n                  'rgba(255, 99, 132, 1)',\n                  'rgba(54, 162, 235, 1)',\n                  'rgba(255, 206, 86, 1)',\n                  'rgba(75, 192, 192, 1)',\n                  'rgba(153, 102, 255, 1)',\n                  'rgba(255, 159, 64, 1)'\n              ],\n              borderWidth: 1\n          }]\n        }}\n        options={{\n          maintainAspectRatio: true,\n          title: {\n            text: \"Title\",\n            display: true,\n            fontSize: 16\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          },\n          responsive: true\n        }}\n      />\n    )\n  }\n}\n\nexport default SwimDetails\n","import React, { Component } from 'react'\n// import { Doughnut, Bar, Pie } from 'react-chartjs-2';\nimport DateBar from \"../charts/DateBar\"\nimport Past from \"../charts/Past\"\nimport {\n  NavLink,\n} from \"react-router-dom\";\nimport {\n  getToken,\n  localStorageKey\n} from '../../utils/storage'\n\nconst dataURL = 'https://us-central1-athlos-live.cloudfunctions.net/athlos-server/data'\n\nclass JumpDetails extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      labels: [],\n      data: [],\n    }\n\n    this.setJumpData = this.setJumpData.bind(this)\n  }\n\n  componentDidMount() {\n    this.setJumpData()\n  }\n  // fetches data by making request to server\n  // updates the state if successfull\n  setJumpData() {\n\n    var headers = new Headers()\n    var token = getToken(localStorageKey)\n    headers.append(\"authorization\", `Bearer ${token}`)\n    headers.append(\"activity\", \"jump\")\n\n    fetch(dataURL, {\n      method: \"GET\",\n      headers: headers,\n    })\n      .catch( (err) => {\n        throw err\n      })\n      .then( (response) => {\n        return response.json()\n      })\n      .catch((err) => {throw err})\n      .then((json) => {\n        if (json.success) {\n          var { activityData } = json\n          // assign data, labels to the chart\n          let chartLabels = this.makeLabels(activityData)\n          let chartData = this.getData(activityData)\n          this.setState({\n            labels: chartLabels,\n            data: chartData\n          })\n        } else {\n          alert(json.message)\n        }\n      })\n  }\n\n  // each label corresponds to 1 jump\n  makeLabels(json) {\n    // debugger\n    var labels = []\n    for (var i = 1; i < json.heights.length + 1; i++) {\n      labels.push(i)\n    }\n    return labels\n  }\n\n  // each data entry is a vertical height in inches\n  getData(json) {\n    var data = []\n    var heights = json.heights\n    heights.forEach(h => {\n      data.push(h)\n    })\n    return data\n  }\n\n  render() {\n    return (\n      <div style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}>\n        <DateBar\n          labels={this.state.labels}\n          data={this.state.data}\n        />\n        <Past\n          labels={this.state.labels}\n          data={this.state.data}\n        />\n        <NavLink\n          className=\"routeButton\"\n          id=\"backFromJumpDetails\"\n          to=\"/graph\"\n          style={{\n            marginTop: \"20px\"\n          }}\n        >\n          Back\n        </NavLink>\n      </div>\n    )\n  }\n}\n\nexport default JumpDetails\n","import React, { useContext } from 'react'\nimport SpaContext from \"../Context\"\nimport { getToken } from '../utils/storage'\nimport { Formik, Form } from 'formik'\nimport * as Yup from 'yup';\nimport \"./css/editProfile.css\"\nimport { weightConvert, heightConvert, englishHeight } from \"../utils/unitConverter\"\nimport { textField, textArea, weightDisplay, heightDisplay } from '../generic/fieldComponents'\n// server url\nconst serverURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server\"\nconst updateProfileURL = `${serverURL}/updateProfile`\nconst checkDuplicateURL = `${serverURL}/checkDuplicatePic`\nconst uploadPicURL = `${serverURL}/uploadProfilePic`\nconst imgAlt = \"./default_profile.png\"\n\nexport default function EditProfileFunc(props) {\n  const context = useContext(SpaContext);\n  const validationSchema = Yup.object({\n    updateFirstName: Yup.string()\n      .max(15, 'Must be 15 characters or less')\n      .required('Cannot be empty'),\n    updateLastName: Yup.string()\n      .max(20, 'Must be 20 characters or less')\n      .required('Cannot be empty'),\n    updateBio: Yup.string()\n      .max(250, \"Must be 250 characters or less\"),\n    updateAge: Yup.number()\n      .positive(\"Must be greater than 0\")\n      .integer(\"Must be a whole number\"),\n    updateLocation: Yup.string()\n      .max(250, 'Must be 250 characters or less'),\n    updateGender: Yup.string()\n      .max(50, 'Must be 50 characters or less'),\n    updateHeightCm: Yup.number()\n      .positive(\"Must be greater than 0\")\n      .integer(\"Must be a whole number\"),\n    updateHeightIn: Yup.number()\n      .positive(\"Must be greater than 0\")\n      .integer(\"Must be a whole number\"),\n    updateHeightFt: Yup.number()\n      .positive(\"Must be greater than 0\")\n      .integer(\"Must be a whole number\"),\n    updateWeight: Yup.number()\n      .positive(\"Must be greater than 0\")\n      .integer(\"Must be a whole number\"),\n  })\n  async function updateProfile(formValues) {\n    alert(\"updating\")\n    var { updateFirstName, updateLastName, updateBio, updateLocation, updateGender } = formValues\n    var { updateHeightFt, updateHeightIn, updateHeightCm, updateWeight, updateAge } = formValues\n    var { file } = formValues\n    var { profilePicture } = context\n    var { unitSystem } = context.settings\n    unitSystem = unitSystem.toLowerCase()\n    var userToken = getToken()\n\n    var formData = new FormData();\n\n    formData.append(\"profilePic\", file)\n    formData.append(\"currImgHash\", profilePicture.etag)\n\n    // check to see if file was already uploaded in the past\n    // turn this into a function that returns a promise later and await/.then it\n    if (file) {\n      var verifyRes = await fetch(checkDuplicateURL, {\n        method: \"POST\",\n        body: formData,\n      })\n      var verifyJson = await verifyRes.json()\n      if (!verifyJson.success) {\n        alert(verifyJson.message)\n        return\n      }\n      var headers = new Headers()\n      headers.append(\"authorization\", `Bearer ${userToken}`)\n      var uploadPicRes = await fetch(uploadPicURL, {\n        method: \"POST\",\n        headers,\n        body: formData\n      })\n      var uploadPicJson = await uploadPicRes.json()\n      if (uploadPicJson.success) {\n        alert(\"successfully updated profile picture!\")\n      }\n    }\n\n    // if unit system is English, convert ft and in into 1 number in inches\n    var weight = unitSystem === 'metric' ? `${updateWeight} kg` : `${updateWeight} lbs`\n    var height = unitSystem === 'metric' ? `${updateHeightCm} cm` : `${updateHeightFt} ft ${updateHeightIn} in`\n    var reqBody = {\n      firstName: updateFirstName,\n      lastName: updateLastName,\n      bio: updateBio,\n      location: updateLocation,\n      gender: updateGender,\n      weight,\n      height,\n      age: updateAge,\n      userToken,\n    }\n\n    var updateRes = await fetch(updateProfileURL, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(reqBody),\n    })\n    var updateJson = await updateRes.json()\n    console.log(\"aioajweif\", updateJson)\n    if (updateJson.success) {\n      alert(\"successfully updated profile\")\n      // refresh the page to get new context n everything\n      window.location.reload()\n    } else {\n      alert(updateJson.message)\n    }\n  }\n\n  var { firstName, lastName, bio, age, location, gender, height, weight } = context\n  const { unitSystem } = context.settings\n  weight = weightConvert(unitSystem, weight)\n  height = heightConvert(unitSystem, height)\n  console.log(context)\n  if (context.mounted) {\n    return (\n      <div className=\"edit-profile-container\">\n        <Formik\n          initialValues={{\n            updateFirstName: firstName,\n            updateLastName: lastName,\n            updateBio: bio,\n            updateAge: age,\n            updateLocation: location,\n            updateGender: gender,\n            updateHeightCm: unitSystem === 'metric' ? height.split(' ')[0] : '',\n            updateHeightIn: unitSystem === 'english' ? englishHeight(height).split(' ')[0] : '', // num ft num in\n            updateHeightFt: unitSystem === 'english' ? englishHeight(height).split(' ')[2] : '', // num ft num in\n            updateWeight: weight ? weight.split(' ')[0] : '' // weight format is 'weight units'\n          }}\n          validationSchema={validationSchema}\n          onSubmit={(values, { setSubmitting }) => {\n            console.log(values)\n            updateProfile(values)\n            setSubmitting(false)\n          }}\n        >\n          {({ errors, touched, setFieldValue }) => (\n            <Form>\n              <div className='prof-pic-container'>\n                <img src={context.profilePicture.profileURL} width=\"300\" height=\"300\" alt={imgAlt}/>\n                <label htmlFor='submit-prof-pic' className='custom-file-upload'>\n                  <input\n                    id='submit-prof-pic'\n                    type=\"file\"\n                    onChange={(event) => {\n                      setFieldValue(\"file\", event.currentTarget.files[0]);\n                    }}\n                    accept=\"image/x-png,image/jpeg\"\n                  />\n                  Upload an Image\n                </label>\n              </div>\n              {textField('First Name', 'text', 'updateFirstName', 'field', errors.updateFirstName, touched.updateFirstName)}\n              {textField('Last Name', 'text', 'updateLastName', 'field', errors.updateLastName, touched.updateLastName)}\n              {textArea('Bio', 'updateBio', 'field', errors.updateBio, touched.updateBio)}\n              {textField('Gender', 'text', 'updateGender', 'field', errors.updateGender, touched.updateGender)}\n              {textField('Age', 'text', 'updateAge', 'field', errors.updateAge, touched.updateAge)}\n              {textField('Location', 'text', 'updateLocation', 'field', errors.updateLocation, touched.updateLocation)}\n              {weightDisplay('updateWeight', 'field', unitSystem, errors)}\n              {heightDisplay(\n                'updateHeight', //revisit how this is implemented cuz there could be 3 different things\n                'field',\n                unitSystem,\n                errors,\n              )}\n              <div className='submit-container'>\n                <input type=\"submit\" className=\"button\" value=\"Update Profile\" id=\"update-button\"/>\n                <div className='cancel' onClick={props.closePopup}>Cancel</div>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    )\n  } else {\n    // spa hasn't mounted and established context yet\n    return (\n      <div className=\"profile-loading-container\">\n        <span>loading...</span>\n      </div>\n    )\n  }\n}\n","// Displays the profile of the user who is logged in on the browser\n// They should be able to see everything\nimport React, { Component } from 'react'\nimport {\n  withRouter,\n} from \"react-router-dom\";\nimport ShowMoreText from 'react-show-more-text';\n\nimport SpaContext from '../Context';\nimport { weightConvert, heightConvert } from \"../utils/unitConverter\"\nimport \"./css/userProfile.css\"\nimport Popup from \"reactjs-popup\";\nimport EditProfileFunc from \"./EditProfileFunc\"\n// replace with default avatar link\nconst imgAlt = \"./default_profile.png\"\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      bestJump: \"\",\n      bestSwim: \"\",\n      bestRun: \"\",\n      editProfile: false,\n      expandBio: false,\n    }\n  }\n\n  componentDidMount() {\n    console.log(\"profile mounted\")\n    // make a fetch request to get the bests of each user,\n    // as well as the units they wanna display\n  }\n\n  renderBio() {\n    var { bio } = this.context\n    const onClick = () => {\n      this.setState({ expandBio: true })\n    }\n    if (!bio) {\n      return (\n        <p>No bio yet</p>\n      )\n    }\n    return (\n      <ShowMoreText\n        /* Default options */\n        lines={3}\n        more='Show more'\n        less='Show less'\n        anchorClass=''\n        onClick={onClick}\n        expanded={this.state.expandBio}\n      >\n        {bio}\n      </ShowMoreText>\n    )\n  }\n\n  renderHeight() {\n    // HEIGHT IS IN FORMAT (num) (units in in/cm). Can flat out display it if they \n    // want metric, else convert to __ ft __ in for english system \n    var { height, settings } = this.context\n    var { unitSystem } = settings\n    unitSystem = unitSystem.toLowerCase()\n    if (!height) {\n      return ( <p>set height</p> )\n    }\n    var displayHeight = height\n    if (unitSystem === \"english\") {\n      // convert to english system if database stores it in cm else just display it in __ ft __ in\n      displayHeight = heightConvert(\"english\", height)\n    } else if (unitSystem === \"metric\") {\n      displayHeight = heightConvert('metric', height)\n    } else {\n      console.error(new Error(\"unitsystem is not 'english' or 'metric'...\"))\n    }\n    return displayHeight\n  }\n\n  renderWeight() {\n    // weight has format (num) (units in kg/lbs)\n    var { weight, settings } = this.context\n    var { unitSystem } = settings\n    unitSystem = unitSystem.toLowerCase()\n    var displayWeight = weight\n    if (unitSystem === \"english\") {\n      // convert to english system if database stores it in cm else just display it in __ ft __ in\n      displayWeight = weightConvert(\"english\", weight)\n    } else if (unitSystem === \"metric\") {\n      displayWeight = weightConvert('metric', weight)\n    } else {\n      console.error(new Error(\"unitsystem is not 'english' or 'metric'...\"))\n    }\n    return displayWeight\n  }\n\n  renderBests() {\n    // calculate bests based off of state and settings\n  }\n\n  renderNumFriends() {\n    var { friends } = this.context\n    return (\n      <p>{\"friends: \" + friends.length}</p>\n    )\n  }\n\n  renderPopup() {\n    const editBtn = (\n      <div className='edit-btn-container'>\n        <i className='far'>&#xf044;</i>\n        <span className=\"edit-btn\">Edit Profile</span>\n      </div>\n    )\n    return (\n      <Popup trigger={editBtn} modal>\n        {close => (\n          <div className=\"popup-modal\">\n            <div className=\"popup-close\" onClick={close}>\n              &times;\n            </div>\n            <h4 className=\"popup-header\"> Edit your profile </h4>\n            <div className=\"content\">\n              <EditProfileFunc closePopup={close}/>\n            </div>\n          </div>\n        )}\n      </Popup>\n    )\n  }\n\n  render() {\n    var { context } = this\n    // if user clicked the button to go to the edit profile page\n    if (context.mounted) {\n      return (\n        <div className=\"profile-container\">\n          <div className='top-half'>\n            {this.renderPopup()}\n            <div className='img-container mt-2'>\n              <img \n                className='profile-pic'\n                src={context.profilePicture.profileURL}\n                height=\"75%\"\n                width=\"75%\"\n                alt={imgAlt}\n              />\n            </div>\n            <div className=\"name-container\">\n              <span className='fname'>{context.firstName}</span>\n              <span className='lname'>{context.lastName}</span>\n            </div>\n            <div className='info-container m-3'>\n              <div className='row'>\n                <div className='col-4'>\n                  <h5>Age</h5>\n                  <span>{context.age}</span>\n                </div>\n                <div className='col-4'>\n                  <h5>Height</h5>\n                  <span>{this.renderHeight()}</span>\n                </div>\n                <div className='col-4'>\n                  <h5>Weight</h5>\n                  <span>{this.renderWeight()}</span>\n                </div>\n              </div>\n            </div>\n            <div className='bio-container m-3'>\n              <span>{this.renderBio()}</span>\n            </div>\n          </div>\n          <div className='bot-half'>\n            <div className='row'>\n              <div className='col-6'>\n                total steps\n              </div>\n              <div className='col-6'>\n                total mins\n              </div>\n            </div>\n            <div className='row'>\n              <div className='col-6'>\n                total laps\n              </div>\n              <div className='col-6'>\n                hightest jump\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      // spa hasn't mounted and established context yet\n      return (\n        <div className=\"profile-loading-container\">\n          <span>loading...</span>\n        </div>\n      )\n    }\n  }\n}\nUserProfile.contextType = SpaContext\nexport default withRouter(UserProfile)\n","// Displays the profile of the searched person\n// that the user logged in on the browser searched for\n\nimport React, { Component } from 'react'\n// import {\n//   Redirect,\n// } from \"react-router-dom\";\n// import { englishHeight }from \"../utils/unitConverter\"\nimport SpaContext from '../Context';\nimport { withRouter } from 'react-router-dom';\nimport ErrorAlert from \"../messages/Error\"\nimport './css/userProfile.css'\nimport { getToken } from \"../utils/storage\"\n\nconst getSearchUserUrl = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/getSearchUser\"\nconst getBasicInfoURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/getSearchUserBasicInfo\"\nconst getFriendsURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/getSearchUserFriends\"\nconst getFitnessURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/getSearchUserFitness\"\n\nconst imgAlt = \"./default_profile.png\"\n\nclass SearchProfile extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      errorMsgs: [],\n      settings: {},\n      firstName: '',\n      lastName: '',\n      isFriend: false,\n      bio: '',\n      age: 0,\n      height: '',\n      weight: '',\n      totals: {},\n      bests: {},\n      friends: []\n    }\n    this.getBasicInfo = this.getBasicInfo.bind(this)\n    this.getFriends = this.getFriends.bind(this)\n    this.getTotalsAndBests = this.getTotalsAndBests.bind(this)\n  }\n\n  async getBasicInfo() {\n    var { seeBasicInfo } = this.state.settings\n    var { isFriend } = this.state\n    var { username } = this.props.match.params\n    if (seeBasicInfo === \"everyone\" || (seeBasicInfo === 'friends' && isFriend)) {\n      var res = await fetch(getBasicInfoURL, {\n        method: \"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username }),\n      })\n      var { bio, weight, height, age, gender } = await res.json()\n      this.setState({ bio, weight, height, age, gender })\n    }\n  }\n\n  async getFriends() {\n    var { seeFriendsList } = this.state.settings\n    var { isFriend } = this.state\n    var { username } = this.props.match.params\n    if (seeFriendsList === \"everyone\" || (seeFriendsList === \"friends\" && isFriend)) {\n      var res = await fetch(getFriendsURL, {\n        method: \"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username }),\n      })\n      var { friends } = await res.json()\n      this.setState({ friends })\n    }\n  }\n\n  async getTotalsAndBests() {\n    var { seeFitness } = this.state.settings\n    var { isFriend } = this.state\n    var { username } = this.props.match.params\n    if (seeFitness === \"everyone\" || (seeFitness === \"friends\" && isFriend)) {\n      var res = await fetch(getFitnessURL, {\n        method: \"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ username }),\n      })\n      var { bests, totals } = await res.json()\n      this.setState({ bests, totals })\n    }\n  }\n\n  async componentDidMount() {\n    console.log(\"mounting search profile\")\n    // query this user's settings, bests, totals and set state\n    let { username } = this.props.match.params\n    var token = getToken()\n    let postBody = { searchUserName: username, userToken: token }\n    try {\n      var res = await fetch(getSearchUserUrl, {\n        method: \"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(postBody),\n      })\n      var { success, settings, firstName, lastName, isFriend, profilePicture } = await res.json()\n      if (!success) {\n        this.setState(prevState => ({\n          errorMsgs: [...prevState.errorMsgs, 'Something went wrong. Please refresh and try again']\n        }))\n        return\n      }\n      this.setState({ settings, firstName, lastName, isFriend, profilePicture })\n      await Promise.all([this.getBasicInfo(), this.getTotalsAndBests(), this.getFriends()])\n    } catch(e) {\n      console.log(\"poswjefioawef\")\n      console.error(e)\n      alert('Something went wrong. Please refresh and try again')\n      this.setState(prevState => ({\n        errorMsgs: [...prevState.errorMsgs, e.toString()]\n      }))\n    }\n  }\n\n  // takes in an object of error messages and returns html elements to display them\n  showError(msg, idx) {\n    const onClose = () => {\n      this.setState(prevState => ({\n        errorMsgs: new Set( [...prevState.errorMsgs].filter(errMsg => errMsg !== msg))\n      }))\n    }\n    return ( <ErrorAlert msg={msg} key={idx} onClose={onClose}/> )\n  }\n\n  // Shows all the errors due to bad signin or signup\n  displayErrors() {\n    var errorMsgs = [...this.state.errorMsgs]\n    return errorMsgs.map(this.showError)\n  }\n\n  render() {\n    console.log(\"search profile has rendered\")\n    var { context } = this\n    var { firstName, lastName, age, height, bio, weight, totals, bests, profilePicture } = this.state\n    if (context.mounted) {\n      return (\n        <div className=\"profile-container\">\n          <div className='top-half'>\n            <div className='img-container mt-2'>\n              <img \n                className='profile-pic'\n                src={profilePicture.profileURL}\n                height=\"75%\"\n                width=\"75%\"\n                alt={imgAlt}\n              />\n            </div>\n            <div className=\"name-container\">\n              <span className='fname'>{firstName}</span>\n              <span className='lname'>{lastName}</span>\n            </div>\n            <div className='info-container m-3'>\n              <div className='row'>\n                <div className='col-4'>\n                  <h5>Age</h5>\n                  <span>{age}</span>\n                </div>\n                <div className='col-4'>\n                  <h5>Height</h5>\n                  <span>{height}</span>\n                </div>\n                <div className='col-4'>\n                  <h5>Weight</h5>\n                  <span>{weight}</span>\n                </div>\n              </div>\n            </div>\n            <div className='bio-container m-3'>\n              <span>{bio}</span>\n            </div>\n          </div>\n          <div className='bot-half'>\n            <div className='row'>\n              <div className='col-6'>\n                <h5>Total Steps</h5>\n                <span>{totals.steps}</span>\n              </div>\n              <div className='col-6'>\n                <h5>Total Min</h5>\n                <span>{totals.minutes}</span>\n              </div>\n            </div>\n            <div className='row'>\n              <div className='col-6'>\n                <h5>Total Laps</h5>\n                <span>{totals.laps}</span>\n              </div>\n              <div className='col-6'>\n                <h5>Highest Jump</h5>\n                <span>{bests.jump}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      // spa hasn't mounted and established context yet\n      return (\n        <div className=\"profile-loading-container\">\n          <span>loading...</span>\n        </div>\n      )\n    }\n  }\n}\nSearchProfile.contextType = SpaContext\n\nexport default withRouter(SearchProfile)","import React, { Component } from 'react';\nimport {\n  withRouter\n} from \"react-router-dom\";\nimport UserProfile from \"./UserProfile\"\nimport SearchProfile from \"./SearchProfile\"\nimport SpaContext from '../Context';\n\nclass Profile extends Component {\n  render() {\n    var { context } = this\n    var { username } = this.props.match.params\n    // debugger;\n    if (username === context.username) {\n      // this is the same user who is looking at their own profile\n      return ( <UserProfile/> )\n    }\n    return ( <SearchProfile/> )\n  }\n}\nProfile.contextType = SpaContext\n\nexport default withRouter(Profile)\n","import React from 'react'\n\nexport default function UnitSystemMenu(props) {\n  return (\n    <div className='settings-dropdown'>\n      <div className=\"btn-group\">\n      <button\n        type=\"button\"\n        className=\"btn btn-primary dropdown-toggle\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        {props.dropdownText}\n      </button>\n      <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n        <span className=\"dropdown-item\" onClick={props.onSelect}>English</span>\n        <span className=\"dropdown-item\" onClick={props.onSelect}>metric</span>\n      </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function PoolLengthMenu(props) {\n  return (\n    <div className='settings-dropdown'>\n      <div className=\"btn-group\">\n        <button\n          type=\"button\"\n          className=\"btn btn-primary dropdown-toggle\"\n          data-toggle=\"dropdown\"\n          aria-haspopup=\"true\"\n          aria-expanded=\"false\"\n        >\n          {props.dropdownText}\n        </button>\n        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n          <span className=\"dropdown-item\" href=\"#\" onClick={props.onSelect}>25 yd</span>\n          <span className=\"dropdown-item\" href=\"#\" onClick={props.onSelect}>25 m</span>\n          <span className=\"dropdown-item\" href=\"#\" onClick={props.onSelect}>50 m</span>\n          <span className=\"dropdown-item\" href=\"#\" onClick={props.onCustomSwimClick}>Custom</span>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function PrivacyMenu(props) {\n  return (\n    <div className='settings-dropdown'>\n      <div className=\"btn-group\">\n      <button\n        type=\"button\"\n        className=\"btn btn-primary dropdown-toggle\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        {props.dropdownText}\n      </button>\n      <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n        <span className=\"dropdown-item\" onClick={props.onSelect}>everyone</span>\n        <span className=\"dropdown-item\" onClick={props.onSelect}>friends</span>\n        <span className=\"dropdown-item\" onClick={props.onSelect}>just me</span>\n      </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport Popup from \"reactjs-popup\";\n\nexport default function PoolLengthPopup(props) {\n  return (\n    <Popup\n      open={props.showCustomSwimSettings}\n      closeOnDocumentClick\n      onClose={props.closeCustomSwimSettings}\n    >\n      <div className=\"popup-modal\">\n        <div className=\"close\" onClick={props.closeCustomSwimSettings}>\n          &times;\n        </div>\n        <div className=\"popup-header\">Set Custom Pool Length</div>\n        <div className=\"popup-content\">\n          <form onSubmit={props.setCustomSwimLength}>\n            <div className=\"input-group mt-3\">\n              <input type=\"number\"className=\"form-control\" onChange={props.onCustomSwimLengthChange} required min='5' max='100' step='.1'/>\n              <div className=\"input-group-append\">\n                <button\n                  className=\"btn btn-outline-secondary dropdown-toggle unit-select\"\n                  type=\"button\"\n                  data-toggle=\"dropdown\"\n                  aria-haspopup=\"true\"\n                  aria-expanded=\"false\"\n                >\n                  {props.customSwimUnits}\n                </button>\n                <div className=\"dropdown-menu\">\n                  <span className=\"dropdown-item\" onClick={props.setCustomSwimUnits}>Yards</span>\n                  <span className=\"dropdown-item\" onClick={props.setCustomSwimUnits}>Meters</span>\n                </div>\n              </div>\n            </div>\n\n            <div className='save-custom-swim-container'>\n              <input type=\"submit\" className=\"save-custom-swim-btn mt-3 btn btn-primary\" value=\"Done\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </Popup>\n  )\n}\n","import React, { Component } from 'react'\nimport SpaContext from \"../Context\"\nimport LoadingScreen from \"../generic/LoadingScreen\"\nimport {\n  withRouter\n} from \"react-router-dom\";\nimport {\n  getToken,\n  storageKey\n} from '../utils/storage';\n\nimport './settings.css'\nimport $ from 'jquery';\n\nimport UnitSystemMenu from \"./dropdown-menus/UnitSystemMenu\"\nimport PoolLengthMenu from \"./dropdown-menus/PoolLengthMenu\"\nimport PrivacyMenu from \"./dropdown-menus/PrivacyMenu\"\nimport PoolLengthPopup from \"./PoolLengthPopup\"\n\nimport Success from \"../messages/Success\"\nimport ErrorAlert from \"../messages/Error\"\n\nconst friendsListHelpMsg = 'Set who can see your friends list on you profile'\nconst fitnessHelpMsg = 'Set who can see your fitness stats such as average number of steps taken per day, calories burned, etc.'\nconst basicInfoHelpMsg = 'Set who can see descriptions about you such as your bio, height, weight, etc.'\nconst unitSystemHelpMsg = 'Set what unit system you would prefer to view measurements in'\nconst lapSwimHelpMsg = 'Set the default length of your lap swim pool. You can change this individually for each workout'\n\n// vars for checking which dropdown menu to display\nconst friendsListID = 'friends list'\nconst fitnessID = 'fitness'\nconst basicInfoID = 'info'\nconst swimLapID = 'swim lap'\nconst unitSystemID = 'unit system'\n\nconst settingsURL = 'https://us-central1-athlos-live.cloudfunctions.net/athlos-server/updateSettings'\n\nclass Settings extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      // show the custom swim popup or not\n      showCustomSwimSettings: false,\n      // display either yards or meters in custom swim popup by default\n      customSwimUnits: \"Yards\",\n      // user inputted swimming length\n      currCustomSwimLength: 25,\n      // custom swimming length to save in the format of: distance units\n      customSwimLength: \"\",\n\n      friendsListChoice: \"\",\n      fitnessChoice: \"\",\n      basicInfoChoice: \"\",\n      unitDisplayChoice: \"\",\n      swimLengthChoice: \"\",\n\n      //errors\n      errorMsgs: \"\",\n      successMsgs: \"\",\n    }\n    this.saveSettings = this.saveSettings.bind(this)\n    this.openCustomSwimSettings = this.openCustomSwimSettings.bind(this)\n    this.closeCustomSwimSettings = this.closeCustomSwimSettings.bind(this)\n    this.onCustomSwimClick = this.onCustomSwimClick.bind(this)\n\n    this.setFriendsListChoice = this.setFriendsListChoice.bind(this)\n    this.setFitnessChoice = this.setFitnessChoice.bind(this)\n    this.setBasicInfoChoice = this.setBasicInfoChoice.bind(this)\n    this.setUnitDisplayChoice = this.setUnitDisplayChoice.bind(this)\n    this.setSwimLengthChoice = this.setSwimLengthChoice.bind(this)\n    this.setCustomSwimUnits = this.setCustomSwimUnits.bind(this)\n    this.onCustomSwimLengthChange = this.onCustomSwimLengthChange.bind(this)\n    this.setCustomSwimLength = this.setCustomSwimLength.bind(this)\n\n    // errors\n    this.displayErrors = this.displayErrors.bind(this)\n    this.displaySuccesses = this.displaySuccesses.bind(this)\n  }\n  \n  // below is for initalizing tooltips\n  componentDidMount() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n    // debugger;\n  }\n  \n  componentDidUpdate() {\n    $('[data-toggle=\"tooltip\"]').tooltip();\n  }\n\n  async saveSettings() {\n    console.log('saving settings...')\n    var {\n      friendsListChoice,\n      fitnessChoice,\n      basicInfoChoice,\n      unitDisplayChoice,\n      swimLengthChoice,\n    } = this.state\n    var { settings } = this.context\n    // replace with what's already in the context if it's empty\n    friendsListChoice = friendsListChoice ? friendsListChoice : settings.seeFriendsList\n    fitnessChoice = fitnessChoice ? fitnessChoice : settings.seeFitness\n    basicInfoChoice = basicInfoChoice ? basicInfoChoice : settings.seeBasicInfo\n    unitDisplayChoice = unitDisplayChoice ? unitDisplayChoice : settings.unitSystem\n    swimLengthChoice = swimLengthChoice ? swimLengthChoice : settings.swimLap\n\n    console.log(friendsListChoice, fitnessChoice, basicInfoChoice, unitDisplayChoice, swimLengthChoice)\n    // get user token\n    const token = getToken(storageKey)\n    if (!token) {\n      // send them back to the login page\n      alert(\"Your session has expired. Please login again.\")\n      this.props.history.push(\"/\")\n      return\n    } \n\n    try {\n      var res = await fetch(settingsURL, {\n        method: \"POST\",\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userToken: token,\n          seeFriendsList: friendsListChoice,\n          seeFitness: fitnessChoice,\n          seeBasicInfo: basicInfoChoice,\n          unitSystem: unitDisplayChoice,\n          swimLap: swimLengthChoice\n        })\n      })\n      var json = await res.json()\n      if (json.success) {\n        this.props.updateUserInfo()\n        this.setState({\n          successMsgs: \"Successfully saved your new settings\"\n        })\n      } else {\n        throw Error(json.messages.msg)\n      }\n    } catch(e) {\n      console.error(e)\n      this.setState({\n        errorMsgs: \"Something went wrong when trying to save your settings. Please try again later.\"\n      })\n    }\n  }\n\n  setFriendsListChoice(e) {\n    this.setState({\n      friendsListChoice: e.currentTarget.textContent,\n    })\n  }\n\n  setFitnessChoice(e) {\n    this.setState({\n      fitnessChoice: e.currentTarget.textContent,\n    })\n  }\n\n  setBasicInfoChoice(e) {\n    this.setState({\n      basicInfoChoice: e.currentTarget.textContent,\n    })\n  }\n\n  setUnitDisplayChoice(e) {\n    this.setState({\n      unitDisplayChoice: e.currentTarget.textContent,\n    })\n  }\n\n  openCustomSwimSettings() {\n    this.setState({\n      showCustomSwimSettings: true\n    })\n  }\n\n  closeCustomSwimSettings() {\n    this.setState({\n      showCustomSwimSettings: false\n    })\n  }\n\n  // causes the popup for entering custom swimming lap distance to open\n  onCustomSwimClick() {\n    this.setState({\n      showCustomSwimSettings: true\n    })\n  }\n\n  setSwimLengthChoice(e) {\n    this.setState({\n      swimLengthChoice: e.currentTarget.textContent,\n    })\n  }\n\n  setCustomSwimUnits(e) {\n    this.setState({\n      customSwimUnits: e.currentTarget.textContent,\n    })\n  }\n\n  onCustomSwimLengthChange(e) {\n    this.setState({\n      currCustomSwimLength: e.target.value\n    })\n  }\n\n  // saves the custom entered swimming pool length the user put in to the state \n  // in the format: \"distance units\"\n  setCustomSwimLength() {\n    var { customSwimUnits, currCustomSwimLength } = this.state\n    // user must have entered a swimming length\n    if (!currCustomSwimLength) {\n\n    }\n    // standardize for database\n    if (customSwimUnits === \"Meters\") {\n      customSwimUnits = \"m\"\n    } else {\n      customSwimUnits = 'yds'\n    }\n    // set the custom swim length that can be uploaded to database, and also\n    // close the modal\n    this.setState({\n      swimLengthChoice: `${currCustomSwimLength} ${customSwimUnits}`,\n      showCustomSwimSettings: false\n    })\n  }\n\n  renderDropDown(menuType, dropdownText) {\n    let {\n      friendsListChoice,\n      fitnessChoice,\n      basicInfoChoice,\n      unitDisplayChoice,\n      swimLengthChoice\n    } = this.state\n    if (menuType === friendsListID) {\n      return ( \n        <PrivacyMenu\n          dropdownText={friendsListChoice ? friendsListChoice : dropdownText}\n          onSelect={this.setFriendsListChoice}\n        />\n      )\n    } else if (menuType === fitnessID) {\n      return (<PrivacyMenu dropdownText={fitnessChoice ? fitnessChoice : dropdownText} onSelect={this.setFitnessChoice}/>)\n    } else if (menuType === basicInfoID) {\n      return (<PrivacyMenu dropdownText={basicInfoChoice ? basicInfoChoice : dropdownText} onSelect={this.setBasicInfoChoice}/>)\n    } else if (menuType === unitSystemID) {\n      return (<UnitSystemMenu dropdownText={unitDisplayChoice ? unitDisplayChoice : dropdownText} onSelect={this.setUnitDisplayChoice}/>)\n    } else if (menuType === swimLapID) {\n      return (\n        <PoolLengthMenu\n          dropdownText={swimLengthChoice ? swimLengthChoice : dropdownText}\n          onCustomSwimClick={this.onCustomSwimClick}\n          onSelect={this.setSwimLengthChoice}\n        />\n      )\n    } else {\n      alert('error showing menu')\n    }\n  }\n\n  displayErrors() {\n    const clearErrors = () => {\n      console.log(\"clearing errors...\")\n      this.setState({\n        errorMsgs: \"\"\n      })\n    }\n    if (this.state.errorMsgs) {\n      return (\n        <div className=\"msg-container\">\n          <ErrorAlert msg={this.state.errorMsgs} onClose={clearErrors}/>\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n  \n  displaySuccesses() {\n    const clearSuccesses = () => {\n      this.setState({\n        successMsgs: \"\"\n      })\n    }\n    if (this.state.successMsgs) {\n      return (\n        <div className=\"msg-container\">\n          <Success msg={this.state.successMsgs} onClose={clearSuccesses}/>\n        </div>\n      )\n    } else {\n      return null\n    }\n  }\n\n  render() {\n    let { settings } = this.context\n    // if the firstname in the context is blank then it hasnt finished populating yet\n    console.log(\"rendering settings\")\n    if (!this.context.firstName) {\n      return ( <LoadingScreen/>)\n    } else {\n      return (\n        <div className='settings-container'>\n          <h3 className='settings-header mt-3 pb-3'>Settings</h3>\n          <PoolLengthPopup \n            showCustomSwimSettings={this.state.showCustomSwimSettings}\n            closeCustomSwimSettings={this.closeCustomSwimSettings}\n            onCustomSwimLengthChange={this.onCustomSwimLengthChange}\n            setCustomSwimUnits={this.setCustomSwimUnits}\n            setCustomSwimLength={this.setCustomSwimLength}\n            customSwimUnits={this.state.customSwimUnits}\n          />\n          <ul className='settings-list'>\n            <li className='settings-list-item'>\n              <i\n                className=\"fa help-icon\"\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title={friendsListHelpMsg}\n              >\n                &#xf059;\n              </i>\n              <span className='setting-text'>Who can see your friends list?</span>\n              {this.renderDropDown(friendsListID, settings.seeFriendsList)}\n            </li>\n            <li className='settings-list-item'>\n              <i\n                className=\"fa help-icon\"\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title={fitnessHelpMsg}\n              >\n                &#xf059;\n              </i>\n              <span className='setting-text'>Who can see your fitness?</span>\n              {this.renderDropDown(fitnessID, settings.seeFitness)}\n            </li>\n            <li className='settings-list-item'>\n              <i\n                className=\"fa help-icon\"\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title={basicInfoHelpMsg}\n              >\n                &#xf059;\n              </i>\n              <span className='setting-text'>Who can see your basic info?</span>\n              {this.renderDropDown(basicInfoID, settings.seeBasicInfo)}\n            </li>\n            <li className='settings-list-item'>\n              <i\n                className=\"fa help-icon\"\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title={unitSystemHelpMsg}\n              >\n                &#xf059;\n              </i>\n              <span className='setting-text'>Unit system to display</span>\n              {this.renderDropDown(unitSystemID, settings.unitSystem)}\n            </li>\n            <li className='settings-list-item'>\n              <i\n                className=\"fa help-icon\"\n                data-toggle=\"tooltip\"\n                data-placement=\"top\"\n                title={lapSwimHelpMsg}\n              >\n                &#xf059;\n              </i>\n              <span className='setting-text'>Default swimming pool length</span>\n              {this.renderDropDown(swimLapID, settings.swimLap)}\n            </li>\n            <li className='settings-list-item' id='save-settings-list-item'>\n              <div className='help-icon empty-space'></div>\n              <div className='setting-text empty-space'></div>\n              <div className='save-settings'>\n                <button \n                  className='save-settings-btn btn btn-primary'\n                  onClick={this.saveSettings}\n                >\n                  Save\n                </button>\n              </div>\n            </li>\n          </ul>\n          {this.displayErrors()}\n          {this.displaySuccesses()}\n        </div>\n      )\n    }\n  }\n}\nSettings.contextType = SpaContext\nexport default withRouter(Settings)","import React, { Component } from 'react'\nimport {\n  getFromLocalStorage,\n  getFromSessionStorage,\n  storageKey,\n} from '../utils/storage';\nconst updateSettingsURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server/updateSettings\"\n\nfunction getToken() {\n  var lsUserToken = getFromLocalStorage(storageKey)\n  var ssUserToken = getFromSessionStorage(storageKey)\n  if (lsUserToken) {\n    return lsUserToken.token\n  } else if (ssUserToken) {\n    return ssUserToken.token\n  } else {\n    return null\n  }\n}\n\nexport default class Stats extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      unitSystem: \"\"\n    }\n    this.submitSettings = this.submitSettings.bind(this)\n    this.radioChange = this.radioChange.bind(this)\n  }\n\n  async submitSettings(e) {\n    e.preventDefault()\n    var reqBody = { ...this.state, userToken: getToken() }\n    var res = await fetch(updateSettingsURL, {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(reqBody),\n    })\n    var json = await res.json()\n    alert(json.success)\n  }\n  \n  componentDidMount() {\n    // debugger;\n  }\n\n  radioChange(e) {\n    this.setState({\n      unitSystem: e.currentTarget.value\n    })\n  }\n\n  checkUnitSystem(system) {\n    var { unitSystem } = this.state\n    if (this.state.unitSystem) {\n      return unitSystem === system\n    }\n    return false\n  }\n\n  render() {\n    return (\n      <div>\n        Stats settings\n        <form onSubmit={this.submitSettings}>\n          <div>\n            <label htmlFor=\"english-units\">English</label>\n            <input\n              id=\"english-units\"\n              name=\"unit-system-input\"\n              type=\"radio\"\n              value=\"english\"\n              checked={this.checkUnitSystem(\"english\")}\n              onChange={this.radioChange}\n            />\n            <label htmlFor=\"metric-units\">Metric</label>\n            <input\n              id=\"metric-units\"\n              name=\"unit-system-input\"\n              type=\"radio\"\n              value=\"metric\"\n              checked={this.checkUnitSystem(\"metric\")}\n              onChange={this.radioChange}\n            />\n          </div>\n          <div>\n            <input type=\"submit\" value=\"Update\"></input>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport {\n  NavLink,\n  withRouter\n} from \"react-router-dom\";\nimport \"./css/sidebar.css\"\nimport SpaContext from '../Context';\n\nconst imgAlt = \"../profile/default_profile.png\"\n\n\nclass Navbar extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      sideNavStyle: {\n        width: \"0px\",\n        clicked: false,\n        selected: \"\"\n      }\n    }\n  }\n\n  /* Set the width of the side navigation to 65%. MAKE SURE PARENT HAS WIDTH */\n  openNav() {\n    document.getElementById(\"mySidenav\").style.width = \"65%\";\n  }\n\n  /* Set the width of the side navigation to 0 */\n  closeNav(e) {\n    document.getElementById(\"mySidenav\").style.width = \"0\";\n  }\n\n  render() {\n    var { homeURL, communityURL, fitnessURL, profileURL, settingsURL, logout } = this.props\n    return (\n      <div className=\"navbar-container\">\n        <span className=\"expander\" onClick={this.openNav}>&#9776;</span>\n        <div id=\"mySidenav\" className=\"sidenav\">\n          <span className=\"closebtn\" onClick={this.closeNav}>&times;</span>\n          <div className=\"prof-pic-container\">\n            <img src={this.context.profilePicture.profileURL} height=\"75%\" width=\"75%\" alt={imgAlt}/>\n          </div>\n          <NavLink \n            className='nav-link'\n            exact to={homeURL} \n            onClick={this.closeNav}\n          >\n            Home\n          </NavLink>\n          <NavLink \n            className=\"nav-link\"\n            to={{pathname: communityURL}}\n            onClick={this.closeNav}\n          >\n            Community\n          </NavLink>\n          <NavLink\n            className=\"nav-link\"\n            to={{pathname: fitnessURL}}\n            onClick={this.closeNav}\n          >\n            Fitness\n          </NavLink>\n          <NavLink\n            className=\"nav-link\"\n            to={{pathname: profileURL}}\n            onClick={this.closeNav}\n          >\n            Profile\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to={{pathname: settingsURL}}\n            onClick={this.closeNav}\n          >\n            Settings\n          </NavLink>\n          <span\n            className='nav-link'\n            onClick={logout}\n          >\n            Logout\n          </span>\n        </div>\n      </div>\n    )\n  }\n}\nNavbar.contextType = SpaContext\nexport default withRouter(Navbar)","import React, { Component } from 'react'\nimport SpaContext from '../Context'\nimport \"./home.css\"\nimport Particles from 'react-particles-js';\nclass Home extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       \n    }\n  }\n  render() {\n    var { context } = this\n    return (\n      <div className='homepage'>\n        <h1>Welcome, {context.firstName}</h1>\n        <Particles\n          className='particles-container'\n          params={{\n            \"particles\": {\n              \"number\": {\n                \"value\": 50\n              },\n              \"size\": {\n                \"value\": 3\n              },\n              'line_linked': {\n                opacity: .6\n              }\n            },\n            \"interactivity\": {\n              \"events\": {\n                \"onhover\": {\n                  \"enable\": true,\n                  \"mode\": \"grab\"\n                },\n              },\n              'modes': {\n                'grab': {\n                  'line_linked': {\n                    opacity: .9,\n                  },\n                  'distance': 200,\n                }\n              }\n            }\n          }}\n        />\n      </div>\n    )\n  }\n}\nHome.contextType = SpaContext\nexport default Home\n","import React, { Component } from 'react'\nimport {\n  NavLink,\n  withRouter\n} from \"react-router-dom\";\nimport \"./css/sideMenu.css\"\nimport SpaContext from '../Context';\n\nconst imgAlt = \"../profile/default_profile.png\"\n\nclass SideMenu extends Component {\n  render() {\n    const { homeURL, communityURL, fitnessURL, profileURL, settingsURL, logout } = this.props\n    return (\n      <div className=\"sidemenu-container\">\n        <div id=\"mySidenav\" className=\"sideMenu\">\n          <div className=\"prof-pic-container\">\n            <img src={this.context.profilePicture.profileURL} height=\"75%\" width=\"75%\" alt={imgAlt}/>\n          </div>\n          <NavLink \n            className='nav-link'\n            exact to={homeURL} \n            onClick={this.closeNav}\n          >\n            Home\n          </NavLink>\n          <NavLink \n            className=\"nav-link\"\n            to={{pathname: communityURL}}\n            onClick={this.closeNav}\n          >\n            Community\n          </NavLink>\n          <NavLink\n            className=\"nav-link\"\n            to={{pathname: fitnessURL}}\n            onClick={this.closeNav}\n          >\n            Fitness\n          </NavLink>\n          <NavLink\n            className=\"nav-link\"\n            to={{pathname: profileURL}}\n            onClick={this.closeNav}\n          >\n            Profile\n          </NavLink>\n          <NavLink\n            className='nav-link'\n            to={{pathname: settingsURL}}\n            onClick={this.closeNav}\n          >\n            Settings\n          </NavLink>\n          <span\n            className='nav-link'\n            onClick={logout}\n          >\n            Logout\n          </span>\n        </div>\n      </div>    \n    )\n  }\n}\nSideMenu.contextType = SpaContext\nexport default withRouter(SideMenu)","import React, { Component } from \"react\";\nimport SpaContext from \"../Context\"\nimport Community from \"../community/Community\"\nimport Fitness from \"../fitness/Fitness\"\nimport RunDetails from \"../fitness/run/RunDetails\"\nimport SwimDetails from \"../fitness/swim/SwimDetails\"\nimport JumpDetails from \"../fitness/jump/JumpDetails\"\nimport Profile from \"../profile/Profile\"\n// import EditProfile from \"../profile/EditProfile\"\nimport Settings from \"../settings/Settings\"\nimport Stats from \"../settings/Stats\"\nimport Navbar from \"../generic/Navbar\"\nimport Home from \"./Home\";\nimport SideMenu from \"../generic/SideMenu\"\nimport FriendDisplay from \"../community/friends/FriendDisplay\"\n// Be sure to include styles at some point, probably during your bootstraping\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport './header.css'\n\nimport \"../transitions.css\"\nimport Media from 'react-media';\n\n// web sockets\nimport io from \"socket.io-client\"\n\nimport {\n  getBests,\n  getProfile,\n  getUsername\n} from \"../utils/userInfo\"\n\nimport {\n  Route,\n  withRouter,\n  Switch\n} from \"react-router-dom\";\n\nimport {\n  getToken,\n  removeFromLocalStorage,\n  removeFromSessionStorage,\n  storageKey,\n} from '../utils/storage';\nimport EditProfileFunc from \"../profile/EditProfileFunc\";\n\n// server url\nconst serverURL = \"https://us-central1-athlos-live.cloudfunctions.net/athlos-server\"\nconst getUserInfoURL = serverURL + \"/getUserInfo\"\nconst getID = \"/tokenToID\"\nconst defaultProfile = \"./profile/default_profile.png\"\nconst root = \"/app\"\n\nconst imgAlt = \"../profile/default_profile.png\"\n\nconst sidebarMediaQuery = '600px'\nconst dataURL = 'https://us-central1-athlos-live.cloudfunctions.net/athlos-server/data'\nclass Header extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      friends: [],\n      friendRequests: [],\n      friendsPending: [],\n      firstName: \"\",\n      lastName: \"\",\n      username: \"\",\n      gender: \"\",\n      bio: \"\",\n      height: \"\",\n      weight: \"\",\n      age: \"\",\n      profilePicture: \"\",\n      settings: {},\n      isLoading: false,\n      logout: false,\n      socket: null,\n      notification: null,\n      mounted: false,\n      rootURL: this.props.match.url,\n      friendTableRows: [],\n      numFriendsDisplay: 25,\n      jumpJson: {\n        activityData: [],\n        action: \"jump\",\n        imageUrl: \"https://img.icons8.com/ios/50/000000/trampoline-park-filled.png\"\n      },\n      runJson: {\n        activityData: [],\n        action: \"run\",\n        imageUrl: \"https://img.icons8.com/nolan/64/000000/running.png\",\n      },\n      swimJson: {\n        activityData: [],\n        action: \"swim\",\n        imageUrl: \"https://img.icons8.com/nolan/64/000000/swimming.png\"\n      },\n    }\n    this.logout = this.logout.bind(this);\n    this.setUpSocket = this.setUpSocket.bind(this)\n    this.getActivityJson = this.getActivityJson.bind(this)\n    this.addFriendRows = this.addFriendRows.bind(this)\n    this.renderHeader = this.renderHeader.bind(this)\n    this.updateUserInfo = this.updateUserInfo.bind(this)\n  }\n\n  setUpSocket() {\n    var prom = new Promise(async (resolve, reject) => {\n      // send request to get decoded user ID\n      var userToken = getToken()\n      var headers = new Headers()\n      headers.append(\"authorization\", `Bearer ${userToken}`)\n      var response = await fetch(serverURL + getID, { method: \"GET\", headers })\n      var json = await response.json()\n      var { userID } = json\n\n      // establish socket connection and send socket ID, userID\n      var data = { userID }\n      var connectionOptions = {\n        'sync disconnect on unload':false\n      }\n      var socket = io.connect(serverURL, connectionOptions)\n\n      // send userID after socket connects\n      socket.on(\"connect\", () => {\n        socket.emit(\"sendUserID\", data)\n        // put socket is session storage\n      })\n\n      socket.on('receiveFriendRequest', (data) => {\n        alert(\"got friend request!\")\n        console.log(data)\n        this.setState({\n          notification: \"!\"\n        })\n      })\n\n      socket.on(\"newFriend\", (data) => {\n        alert(\"got new friend\")\n        console.log(data)\n        this.setState({\n          notification: \"***\"\n        })\n      })\n\n      socket.on(\"logoutClient\", (data) => {\n        // data should contain the socketID that did the logging out\n        // socket should have also been disconnected by the server\n        var { logoutSocketID } = data\n        console.log(logoutSocketID)\n        if (socket.id !== logoutSocketID) {\n          alert(\"You have been logged out from another tab or browser\")\n        }\n        // remove user token\n        removeFromLocalStorage(storageKey)\n        removeFromSessionStorage(storageKey)\n        // remove socket id from session storage\n        this.setState({\n          isLoading: true,\n          logout: true,\n        });\n        this.props.history.push(\"/\")\n      })\n      resolve(socket)\n    })\n    return prom\n  }\n\n  async getActivityJson(activity) {\n    // CHANGE TO GET THE FIRST 10-50 ENTRIES MAYBE\n    var headers = new Headers()\n    var token = getToken()\n    headers.append(\"authorization\", `Bearer ${token}`)\n    headers.append(\"activity\", activity)\n\n    var res = await fetch(dataURL, {\n      method: \"GET\",\n      headers: headers,\n    })\n    var trackedFitness = await res.json()\n    return trackedFitness\n  }\n\n  /**\n   * for each friend in the friend array, return\n   * a table row to show in the friends table\n   */  \n  async addFriendRows(friends, numFriendsDisplay) {\n    var tableRows = []\n\n    // DONT FORGET TO SORT FRIENDS\n    for (let i = 0; i < friends.length; i++) {\n      if (i === numFriendsDisplay - 1) { break }\n      let { id, firstName, lastName } = friends[i]\n      let [bests, profileUrl, username] = await Promise.all([getBests(id), getProfile(id), getUsername(id)])\n      console.log(username)\n      tableRows.push(\n        <FriendDisplay \n          key={id}\n          isFriend={true}\n          isFriendRequest={false}\n          rank={i + 1}\n          onClick={() => {this.props.history.push(`/app/profile/${username}`)}}\n          profileUrl={profileUrl}\n          defaultProfile={defaultProfile}\n          imgAlt={imgAlt}\n          firstName={firstName}\n          lastName={lastName}\n          bests={bests}\n        />\n      )\n    }\n    console.log(tableRows)\n    return tableRows\n  }\n\n  async componentDidMount() {\n    this._isMounted = true\n    // if there is no token then user hasn't logged in...\n    // log them out and redirect them back to login page,\n    // and don't run the rest of this method cuz it involves setting\n    // up stuff as if the user had logged in\n    var userToken = getToken()\n    if (!userToken) {\n      this.setState({\n        logout: true\n      })\n      this.props.history.push(\"/\")\n      return\n    }\n\n    // set up the web socket connection to server\n    var socket = await this.setUpSocket()\n\n    // get the user's information here from database\n    // make request to server to user information and set state\n    var headers = new Headers()\n    headers.append(\"authorization\", `Bearer ${userToken}`)\n\n    var res = await fetch(getUserInfoURL, { method: \"GET\", headers })\n    var userJson = await res.json()\n    console.log(userJson)\n\n    var { numFriendsDisplay } = this.state\n    var friendTableRows = await this.addFriendRows(userJson.friends, numFriendsDisplay)\n\n    // get user's fitness data for jumps, runs, swims\n    // MAKE AWAIT PROMISES.ALL LATER\n    var jumpsTracked = await this.getActivityJson(\"jump\")\n    var swimsTracked = await this.getActivityJson(\"swim\")\n    var runsTracked = await this.getActivityJson(\"run\")\n    var gotAllInfo = userJson.success && jumpsTracked.success && swimsTracked.success && runsTracked.success\n    if (gotAllInfo && this._isMounted) {\n      // one bug that could come up is if another setState occurred outside this function before\n      // the fetch response finished running. This delayed setState would then\n      // run after the other setState which could cause some mixups in which state is correct\n      // Shouldn't be a problem thoughsince the socket field is only updated here and users can't see it.\n      this.setState(prevState => ({\n        ...userJson,\n        socket,\n        mounted: true,\n        friendTableRows,\n        jumpJson: {\n          ...prevState.jumpJson,\n          activityData: jumpsTracked.activityData \n        },\n        runJson: {\n          ...prevState.runJson,\n          activityData: runsTracked.activityData \n        },\n        swimJson: {\n          ...prevState.swimJson,\n          activityData: swimsTracked.activityData \n        }\n      }))\n    } else {\n      alert(\"not success\")\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n    console.log(\"unmounting header...\")\n  }\n\n  logout() {\n    console.log(\"logging out...\")\n    var { socket } = this.state\n    console.log(socket)\n\n    // emit logout event to server\n    var userToken = getToken()\n    var data = { userToken }\n    socket.emit(\"logoutServer\", data)\n  }\n\n  renderHeader() {\n    const { match } = this.props\n    console.log(this.props)\n    // if there is a token in session or local storage...\n    if (getToken()) {\n      return (\n        <div className=\"header w-100\">\n          <div className=\"d-flex align-items-center w-100 h-100\">\n            <span className='header-title position-absolute w-100'>\n              Athlos Tracker\n            </span>\n            {/* dont display the sidebar opener (the thing with three lines) unless it's a phone */}\n            <Media query={`(max-width: ${sidebarMediaQuery})`} render={() => \n              (\n                <div className=\"navbar-container ml-3 mt-auto mb-auto\">\n                  <Navbar\n                    homeURL=\"/app\"\n                    communityURL={`${match.url}/community`}\n                    fitnessURL={`${match.url}/fitness`}\n                    profileURL={`${match.url}/profile/${this.state.username}`}\n                    settingsURL={`${match.url}/settings`}\n                    logout={this.logout}\n                  />\n                </div>\n              )}\n            />\n          </div>\n        </div>\n      )\n    } else {\n      // no token, redirect to login\n      alert('no token in the storage...')\n      this.props.history.push(\"/\")\n    }\n  }\n\n  renderSideMenu() {\n    const { match } = this.props\n    return (\n      <Media query={`(min-width: ${sidebarMediaQuery})`} render={() => \n        (\n          <div className='col-md-3 sideMenu-container'>\n            <div className='card text-center'>\n              <div className=\"sideMenu-container\">\n                <SideMenu\n                  homeURL=\"/app\"\n                  communityURL={`${match.url}/community`}\n                  fitnessURL={`${match.url}/fitness`}\n                  profileURL={`${match.url}/profile/${this.state.username}`}\n                  settingsURL={`${match.url}/settings`}\n                  logout={this.logout}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      />\n    )\n  }\n\n  // updates the state and therefore the context if the user info is suspected\n  // to change. For example if the user changes their settings we want the new\n  // settings to be applied automatically. For now only used for settings.\n  async updateUserInfo() {\n    // get the user's information here from database\n    // make request to server to user information and set state\n    var userToken = getToken()\n    var headers = new Headers()\n    headers.append(\"authorization\", `Bearer ${userToken}`)\n\n    var res = await fetch(getUserInfoURL, { method: \"GET\", headers })\n    var userJson = await res.json()\n    this.setState(prevState => ({\n      ...userJson,\n      socket: prevState.socket,\n      mounted: true,\n      friendTableRows: prevState.friendTableRows,\n      jumpJson: prevState.jumpJson,\n      runJson: prevState.runJson,\n      swimJson: prevState.swimJson,\n    }))\n  }\n\n  render() {\n    console.log(\"rendering header...\")\n    // renders the general layout of the application\n    return (\n      <div className=\"home-container\">\n        <SpaContext.Provider value={this.state}>\n          <div className='row'>\n            <div className='col-12'>\n              {this.renderHeader()} \n            </div>\n          </div>\n          {/* only returns elements if it's not a phone */}\n          <div className='mt-3 ml-2 p-1 content'>\n            {this.renderSideMenu()}\n            <div className='col-md-9 col-12 page-container'>\n              <div className=\"card text-center h-100\">\n                <Switch location={this.props.location}>\n                  <Route exact path={`${root}`} component={Home}/>\n                  <Route path={`${root}/community`} component={Community}/>\n                  <Route path={`${root}/fitness`} component={Fitness}/>\n                  <Route path={`${root}/jumpDetails`} component={JumpDetails}/>\n                  <Route path={`${root}/swimDetails`} component={SwimDetails}/>\n                  <Route path={`${root}/runDetails`} component={RunDetails}/>\n                  <Route exact path={`${root}/profile/:username?`} component={Profile}/>\n                  {/* <Route path={`${root}/profile/:username?/edit`} component={EditProfile}/> */}\n                  <Route path={`${root}/profile/:username?/edit`} component={EditProfileFunc}/>\n                  <Route\n                    exact path={`${root}/settings`}\n                    render={(props) => <Settings {...props} updateUserInfo={this.updateUserInfo} />}\n                  />\n                  <Route path={`${root}/settings/stats`} component={Stats}/>\n                </Switch>\n              </div>\n            </div>\n          </div>\n        </SpaContext.Provider>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Header);\n","import React, { Component } from 'react'\nimport './App.css'\nimport {\n  Route,\n  withRouter,\n} from \"react-router-dom\";\n\nimport Login from \"./login/Login\"\nimport Confirmation from \"./login/Confirmation\"\nimport PwResetPage from \"./login/PwResetPage\"\n\nimport Header from \"./home/Header\"\nimport \"./transitions.css\"\n\n// server url\nconst root = \"/app\"\n\nclass Spa extends Component {\n  render() {\n    console.log(\"rendering spa...\")\n    return (\n      <div className=\"App\">\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/confirmation\" component={Confirmation} />\n        <Route path=\"/pwResetPage\" component={PwResetPage} /> \n        {/* intentionally render the header component with all the others (no switch) */}\n        <Route path={`${root}`} component={Header}/>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(Spa)\n","import React, { Component } from 'react'\nimport './App.css'\nimport {\n  BrowserRouter,\n} from \"react-router-dom\";\nimport Spa from \"./Spa\"\nimport \"./transitions.css\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: null,\n    }\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <Spa />\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default App\n","// bootstrap imports for webpack\nimport 'bootstrap/dist/css/bootstrap.css';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\n\n//core ui\nimport \"@coreui/coreui\"\n\n//font awesome\nimport { library } from '@fortawesome/fontawesome-svg-core'\n// import { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faCheckSquare, faCoffee, faAtom, faFireAlt, faClock } from '@fortawesome/free-solid-svg-icons'\n\nimport App from './App.js'\n\nlibrary.add(faCheckSquare, faCoffee, faAtom, faFireAlt, faClock)\n\nReactDOM.render(<App />, document.getElementById('root'))\n","// save tokens to the browser storage to remember if user signed in or not\nconst storageKey =  \"the_main_app\"\nconst socketStorageKey = \"socket\"\nfunction getFromLocalStorage(key) {\n  if (!key) {\n    return null;\n  }\n  try {\n    const valueStr = localStorage.getItem(key);\n    if (valueStr) {\n      return JSON.parse(valueStr);\n    }\n    return null;\n  } catch (err) {\n    return null;\n  }\n}\n\nfunction getFromSessionStorage(key) {\n  if (!key) {\n    return null;\n  }\n  try {\n    const valueStr = sessionStorage.getItem(key);\n    if (valueStr) {\n      return JSON.parse(valueStr);\n    }\n    return null;\n  } catch (err) {\n    return null;\n  }\n}\n\nfunction getToken() {\n  var lsUserToken = getFromLocalStorage(storageKey)\n  var ssUserToken = getFromSessionStorage(storageKey)\n  if (lsUserToken) {\n    return lsUserToken.token\n  } else if (ssUserToken) {\n    return ssUserToken.token\n  } else {\n    return null\n  }\n}\n\nfunction setInLocalStorage(key, obj) {\n  if (!key) {\n    console.error('Error: Key is missing');\n  }\n  try {\n    localStorage.setItem(key, JSON.stringify(obj));\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nfunction removeFromLocalStorage(key) {\n  localStorage.removeItem(key)\n}\n\nfunction removeFromSessionStorage(key) {\n  sessionStorage.removeItem(key)\n}\n\nfunction setInSessionStorage(key, obj) {\n  if (!key) {\n    console.error('Error: Key is missing');\n  }\n  try {\n    sessionStorage.setItem(key, JSON.stringify(obj));\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nmodule.exports = {\n  getFromLocalStorage,\n  setInLocalStorage,\n  removeFromLocalStorage,\n  removeFromSessionStorage,\n  setInSessionStorage,\n  getFromSessionStorage,\n  getToken,\n  storageKey,\n  socketStorageKey,\n}\n"],"sourceRoot":""}